<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="15243"><g><title>cfree (20 samples, 0.13%)</title><rect x="0.0262%" y="485" width="0.1312%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="20"/><text x="0.2762%" y="495.50"></text></g><g><title>[libc.so.6] (18 samples, 0.12%)</title><rect x="0.0394%" y="469" width="0.1181%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="18"/><text x="0.2894%" y="479.50"></text></g><g><title>[libc.so.6] (12 samples, 0.08%)</title><rect x="0.0787%" y="453" width="0.0787%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="12"/><text x="0.3287%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.03%)</title><rect x="0.1312%" y="437" width="0.0262%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="4"/><text x="0.3812%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (200 samples, 1.31%)</title><rect x="0.7282%" y="181" width="1.3121%" height="15" fill="rgb(208,68,35)" fg:x="111" fg:w="200"/><text x="0.9782%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (200 samples, 1.31%)</title><rect x="0.7282%" y="165" width="1.3121%" height="15" fill="rgb(232,128,0)" fg:x="111" fg:w="200"/><text x="0.9782%" y="175.50"></text></g><g><title>cfree (199 samples, 1.31%)</title><rect x="0.7348%" y="149" width="1.3055%" height="15" fill="rgb(207,160,47)" fg:x="112" fg:w="199"/><text x="0.9848%" y="159.50"></text></g><g><title>[libc.so.6] (117 samples, 0.77%)</title><rect x="1.2727%" y="133" width="0.7676%" height="15" fill="rgb(228,23,34)" fg:x="194" fg:w="117"/><text x="1.5227%" y="143.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="2.0272%" y="117" width="0.0131%" height="15" fill="rgb(218,30,26)" fg:x="309" fg:w="2"/><text x="2.2772%" y="127.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="2.0272%" y="101" width="0.0131%" height="15" fill="rgb(220,122,19)" fg:x="309" fg:w="2"/><text x="2.2772%" y="111.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="2.0272%" y="85" width="0.0131%" height="15" fill="rgb(250,228,42)" fg:x="309" fg:w="2"/><text x="2.2772%" y="95.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="2.0272%" y="69" width="0.0131%" height="15" fill="rgb(240,193,28)" fg:x="309" fg:w="2"/><text x="2.2772%" y="79.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="2.0272%" y="53" width="0.0131%" height="15" fill="rgb(216,20,37)" fg:x="309" fg:w="2"/><text x="2.2772%" y="63.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="2.0272%" y="37" width="0.0131%" height="15" fill="rgb(206,188,39)" fg:x="309" fg:w="2"/><text x="2.2772%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (273 samples, 1.79%)</title><rect x="0.5642%" y="277" width="1.7910%" height="15" fill="rgb(217,207,13)" fg:x="86" fg:w="273"/><text x="0.8142%" y="287.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::component::Component]&gt; (273 samples, 1.79%)</title><rect x="0.5642%" y="261" width="1.7910%" height="15" fill="rgb(231,73,38)" fg:x="86" fg:w="273"/><text x="0.8142%" y="271.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::component::Component&gt; (248 samples, 1.63%)</title><rect x="0.7282%" y="245" width="1.6270%" height="15" fill="rgb(225,20,46)" fg:x="111" fg:w="248"/><text x="0.9782%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::sub_component::SubComponent&gt;&gt; (248 samples, 1.63%)</title><rect x="0.7282%" y="229" width="1.6270%" height="15" fill="rgb(210,31,41)" fg:x="111" fg:w="248"/><text x="0.9782%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::sub_component::SubComponent&gt;&gt; (248 samples, 1.63%)</title><rect x="0.7282%" y="213" width="1.6270%" height="15" fill="rgb(221,200,47)" fg:x="111" fg:w="248"/><text x="0.9782%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (248 samples, 1.63%)</title><rect x="0.7282%" y="197" width="1.6270%" height="15" fill="rgb(226,26,5)" fg:x="111" fg:w="248"/><text x="0.9782%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (48 samples, 0.31%)</title><rect x="2.0403%" y="181" width="0.3149%" height="15" fill="rgb(249,33,26)" fg:x="311" fg:w="48"/><text x="2.2903%" y="191.50"></text></g><g><title>[libc.so.6] (254 samples, 1.67%)</title><rect x="5.2352%" y="165" width="1.6663%" height="15" fill="rgb(235,183,28)" fg:x="798" fg:w="254"/><text x="5.4852%" y="175.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="6.9081%" y="69" width="0.0131%" height="15" fill="rgb(221,5,38)" fg:x="1053" fg:w="2"/><text x="7.1581%" y="79.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="6.9081%" y="53" width="0.0131%" height="15" fill="rgb(247,18,42)" fg:x="1053" fg:w="2"/><text x="7.1581%" y="63.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="6.9081%" y="37" width="0.0131%" height="15" fill="rgb(241,131,45)" fg:x="1053" fg:w="2"/><text x="7.1581%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (692 samples, 4.54%)</title><rect x="2.3880%" y="245" width="4.5398%" height="15" fill="rgb(249,31,29)" fg:x="364" fg:w="692"/><text x="2.6380%" y="255.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (692 samples, 4.54%)</title><rect x="2.3880%" y="229" width="4.5398%" height="15" fill="rgb(225,111,53)" fg:x="364" fg:w="692"/><text x="2.6380%" y="239.50">alloc..</text></g><g><title>cfree (687 samples, 4.51%)</title><rect x="2.4208%" y="213" width="4.5070%" height="15" fill="rgb(238,160,17)" fg:x="369" fg:w="687"/><text x="2.6708%" y="223.50">cfree</text></g><g><title>[libc.so.6] (658 samples, 4.32%)</title><rect x="2.6110%" y="197" width="4.3167%" height="15" fill="rgb(214,148,48)" fg:x="398" fg:w="658"/><text x="2.8610%" y="207.50">[libc..</text></g><g><title>[libc.so.6] (554 samples, 3.63%)</title><rect x="3.2933%" y="181" width="3.6345%" height="15" fill="rgb(232,36,49)" fg:x="502" fg:w="554"/><text x="3.5433%" y="191.50">[lib..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="6.9081%" y="165" width="0.0197%" height="15" fill="rgb(209,103,24)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="6.9081%" y="149" width="0.0197%" height="15" fill="rgb(229,88,8)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="159.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="6.9081%" y="133" width="0.0197%" height="15" fill="rgb(213,181,19)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="143.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="6.9081%" y="117" width="0.0197%" height="15" fill="rgb(254,191,54)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="127.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="6.9081%" y="101" width="0.0197%" height="15" fill="rgb(241,83,37)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="111.50"></text></g><g><title>tick_sched_timer (3 samples, 0.02%)</title><rect x="6.9081%" y="85" width="0.0197%" height="15" fill="rgb(233,36,39)" fg:x="1053" fg:w="3"/><text x="7.1581%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,016 samples, 6.67%)</title><rect x="0.2690%" y="341" width="6.6654%" height="15" fill="rgb(226,3,54)" fg:x="41" fg:w="1016"/><text x="0.5190%" y="351.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::repeat::Repeat]&gt; (1,016 samples, 6.67%)</title><rect x="0.2690%" y="325" width="6.6654%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1016"/><text x="0.5190%" y="335.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::repeat::Repeat&gt; (971 samples, 6.37%)</title><rect x="0.5642%" y="309" width="6.3701%" height="15" fill="rgb(238,167,29)" fg:x="86" fg:w="971"/><text x="0.8142%" y="319.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::component::Component&gt;&gt; (971 samples, 6.37%)</title><rect x="0.5642%" y="293" width="6.3701%" height="15" fill="rgb(232,182,51)" fg:x="86" fg:w="971"/><text x="0.8142%" y="303.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::component::Component&gt;&gt; (698 samples, 4.58%)</title><rect x="2.3552%" y="277" width="4.5792%" height="15" fill="rgb(231,60,39)" fg:x="359" fg:w="698"/><text x="2.6052%" y="287.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (698 samples, 4.58%)</title><rect x="2.3552%" y="261" width="4.5792%" height="15" fill="rgb(208,69,12)" fg:x="359" fg:w="698"/><text x="2.6052%" y="271.50">&lt;allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (123 samples, 0.81%)</title><rect x="6.9409%" y="309" width="0.8069%" height="15" fill="rgb(235,93,37)" fg:x="1058" fg:w="123"/><text x="7.1909%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (123 samples, 0.81%)</title><rect x="6.9409%" y="293" width="0.8069%" height="15" fill="rgb(213,116,39)" fg:x="1058" fg:w="123"/><text x="7.1909%" y="303.50"></text></g><g><title>cfree (115 samples, 0.75%)</title><rect x="6.9934%" y="277" width="0.7544%" height="15" fill="rgb(222,207,29)" fg:x="1066" fg:w="115"/><text x="7.2434%" y="287.50"></text></g><g><title>[libc.so.6] (79 samples, 0.52%)</title><rect x="7.2295%" y="261" width="0.5183%" height="15" fill="rgb(206,96,30)" fg:x="1102" fg:w="79"/><text x="7.4795%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,168 samples, 7.66%)</title><rect x="0.1640%" y="405" width="7.6625%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="1168"/><text x="0.4140%" y="415.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::field::Field]&gt; (1,168 samples, 7.66%)</title><rect x="0.1640%" y="389" width="7.6625%" height="15" fill="rgb(250,191,14)" fg:x="25" fg:w="1168"/><text x="0.4140%" y="399.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::field::Field&gt; (1,157 samples, 7.59%)</title><rect x="0.2362%" y="373" width="7.5904%" height="15" fill="rgb(239,60,40)" fg:x="36" fg:w="1157"/><text x="0.4862%" y="383.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::repeat::Repeat&gt;&gt; (1,157 samples, 7.59%)</title><rect x="0.2362%" y="357" width="7.5904%" height="15" fill="rgb(206,27,48)" fg:x="36" fg:w="1157"/><text x="0.4862%" y="367.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::repeat::Repeat&gt;&gt; (136 samples, 0.89%)</title><rect x="6.9343%" y="341" width="0.8922%" height="15" fill="rgb(225,35,8)" fg:x="1057" fg:w="136"/><text x="7.1843%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.89%)</title><rect x="6.9343%" y="325" width="0.8922%" height="15" fill="rgb(250,213,24)" fg:x="1057" fg:w="136"/><text x="7.1843%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.08%)</title><rect x="7.7478%" y="309" width="0.0787%" height="15" fill="rgb(247,123,22)" fg:x="1181" fg:w="12"/><text x="7.9978%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.08%)</title><rect x="7.8331%" y="373" width="0.0787%" height="15" fill="rgb(231,138,38)" fg:x="1194" fg:w="12"/><text x="8.0831%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.08%)</title><rect x="7.8331%" y="357" width="0.0787%" height="15" fill="rgb(231,145,46)" fg:x="1194" fg:w="12"/><text x="8.0831%" y="367.50"></text></g><g><title>cfree (12 samples, 0.08%)</title><rect x="7.8331%" y="341" width="0.0787%" height="15" fill="rgb(251,118,11)" fg:x="1194" fg:w="12"/><text x="8.0831%" y="351.50"></text></g><g><title>[libc.so.6] (11 samples, 0.07%)</title><rect x="7.8397%" y="325" width="0.0722%" height="15" fill="rgb(217,147,25)" fg:x="1195" fg:w="11"/><text x="8.0897%" y="335.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="7.8790%" y="309" width="0.0328%" height="15" fill="rgb(247,81,37)" fg:x="1201" fg:w="5"/><text x="8.1290%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::segment::Segment&gt;&gt; (1,183 samples, 7.76%)</title><rect x="0.1574%" y="485" width="7.7609%" height="15" fill="rgb(209,12,38)" fg:x="24" fg:w="1183"/><text x="0.4074%" y="495.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,183 samples, 7.76%)</title><rect x="0.1574%" y="469" width="7.7609%" height="15" fill="rgb(227,1,9)" fg:x="24" fg:w="1183"/><text x="0.4074%" y="479.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::segment::Segment]&gt; (1,183 samples, 7.76%)</title><rect x="0.1574%" y="453" width="7.7609%" height="15" fill="rgb(248,47,43)" fg:x="24" fg:w="1183"/><text x="0.4074%" y="463.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::segment::Segment&gt; (1,182 samples, 7.75%)</title><rect x="0.1640%" y="437" width="7.7544%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="1182"/><text x="0.4140%" y="447.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::field::Field&gt;&gt; (1,182 samples, 7.75%)</title><rect x="0.1640%" y="421" width="7.7544%" height="15" fill="rgb(210,229,1)" fg:x="25" fg:w="1182"/><text x="0.4140%" y="431.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::field::Field&gt;&gt; (14 samples, 0.09%)</title><rect x="7.8265%" y="405" width="0.0918%" height="15" fill="rgb(222,148,37)" fg:x="1193" fg:w="14"/><text x="8.0765%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.09%)</title><rect x="7.8265%" y="389" width="0.0918%" height="15" fill="rgb(234,67,33)" fg:x="1193" fg:w="14"/><text x="8.0765%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (165 samples, 1.08%)</title><rect x="8.2858%" y="229" width="1.0825%" height="15" fill="rgb(247,98,35)" fg:x="1263" fg:w="165"/><text x="8.5358%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (165 samples, 1.08%)</title><rect x="8.2858%" y="213" width="1.0825%" height="15" fill="rgb(247,138,52)" fg:x="1263" fg:w="165"/><text x="8.5358%" y="223.50"></text></g><g><title>cfree (164 samples, 1.08%)</title><rect x="8.2923%" y="197" width="1.0759%" height="15" fill="rgb(213,79,30)" fg:x="1264" fg:w="164"/><text x="8.5423%" y="207.50"></text></g><g><title>[libc.so.6] (98 samples, 0.64%)</title><rect x="8.7253%" y="181" width="0.6429%" height="15" fill="rgb(246,177,23)" fg:x="1330" fg:w="98"/><text x="8.9753%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (239 samples, 1.57%)</title><rect x="8.2005%" y="325" width="1.5679%" height="15" fill="rgb(230,62,27)" fg:x="1250" fg:w="239"/><text x="8.4505%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::component::Component]&gt; (239 samples, 1.57%)</title><rect x="8.2005%" y="309" width="1.5679%" height="15" fill="rgb(216,154,8)" fg:x="1250" fg:w="239"/><text x="8.4505%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::component::Component&gt; (226 samples, 1.48%)</title><rect x="8.2858%" y="293" width="1.4826%" height="15" fill="rgb(244,35,45)" fg:x="1263" fg:w="226"/><text x="8.5358%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::sub_component::SubComponent&gt;&gt; (226 samples, 1.48%)</title><rect x="8.2858%" y="277" width="1.4826%" height="15" fill="rgb(251,115,12)" fg:x="1263" fg:w="226"/><text x="8.5358%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::sub_component::SubComponent&gt;&gt; (226 samples, 1.48%)</title><rect x="8.2858%" y="261" width="1.4826%" height="15" fill="rgb(240,54,50)" fg:x="1263" fg:w="226"/><text x="8.5358%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (226 samples, 1.48%)</title><rect x="8.2858%" y="245" width="1.4826%" height="15" fill="rgb(233,84,52)" fg:x="1263" fg:w="226"/><text x="8.5358%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (61 samples, 0.40%)</title><rect x="9.3682%" y="229" width="0.4002%" height="15" fill="rgb(207,117,47)" fg:x="1428" fg:w="61"/><text x="9.6182%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.62%)</title><rect x="9.7881%" y="293" width="0.6232%" height="15" fill="rgb(249,43,39)" fg:x="1492" fg:w="95"/><text x="10.0381%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.62%)</title><rect x="9.7881%" y="277" width="0.6232%" height="15" fill="rgb(209,38,44)" fg:x="1492" fg:w="95"/><text x="10.0381%" y="287.50"></text></g><g><title>cfree (94 samples, 0.62%)</title><rect x="9.7947%" y="261" width="0.6167%" height="15" fill="rgb(236,212,23)" fg:x="1493" fg:w="94"/><text x="10.0447%" y="271.50"></text></g><g><title>[libc.so.6] (78 samples, 0.51%)</title><rect x="9.8996%" y="245" width="0.5117%" height="15" fill="rgb(242,79,21)" fg:x="1509" fg:w="78"/><text x="10.1496%" y="255.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="10.3720%" y="229" width="0.0394%" height="15" fill="rgb(211,96,35)" fg:x="1581" fg:w="6"/><text x="10.6220%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (367 samples, 2.41%)</title><rect x="8.0234%" y="389" width="2.4077%" height="15" fill="rgb(253,215,40)" fg:x="1223" fg:w="367"/><text x="8.2734%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::repeat::Repeat]&gt; (367 samples, 2.41%)</title><rect x="8.0234%" y="373" width="2.4077%" height="15" fill="rgb(211,81,21)" fg:x="1223" fg:w="367"/><text x="8.2734%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::repeat::Repeat&gt; (340 samples, 2.23%)</title><rect x="8.2005%" y="357" width="2.2305%" height="15" fill="rgb(208,190,38)" fg:x="1250" fg:w="340"/><text x="8.4505%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::component::Component&gt;&gt; (340 samples, 2.23%)</title><rect x="8.2005%" y="341" width="2.2305%" height="15" fill="rgb(235,213,38)" fg:x="1250" fg:w="340"/><text x="8.4505%" y="351.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::component::Component&gt;&gt; (101 samples, 0.66%)</title><rect x="9.7684%" y="325" width="0.6626%" height="15" fill="rgb(237,122,38)" fg:x="1489" fg:w="101"/><text x="10.0184%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.66%)</title><rect x="9.7684%" y="309" width="0.6626%" height="15" fill="rgb(244,218,35)" fg:x="1489" fg:w="101"/><text x="10.0184%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.02%)</title><rect x="10.4113%" y="293" width="0.0197%" height="15" fill="rgb(240,68,47)" fg:x="1587" fg:w="3"/><text x="10.6613%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.66%)</title><rect x="10.4310%" y="357" width="0.6560%" height="15" fill="rgb(210,16,53)" fg:x="1590" fg:w="100"/><text x="10.6810%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.66%)</title><rect x="10.4310%" y="341" width="0.6560%" height="15" fill="rgb(235,124,12)" fg:x="1590" fg:w="100"/><text x="10.6810%" y="351.50"></text></g><g><title>cfree (92 samples, 0.60%)</title><rect x="10.4835%" y="325" width="0.6036%" height="15" fill="rgb(224,169,11)" fg:x="1598" fg:w="92"/><text x="10.7335%" y="335.50"></text></g><g><title>[libc.so.6] (67 samples, 0.44%)</title><rect x="10.6475%" y="309" width="0.4395%" height="15" fill="rgb(250,166,2)" fg:x="1623" fg:w="67"/><text x="10.8975%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1,695 samples, 11.12%)</title><rect x="0.0066%" y="565" width="11.1199%" height="15" fill="rgb(242,216,29)" fg:x="1" fg:w="1695"/><text x="0.2566%" y="575.50">hashbrown::raw::..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,694 samples, 11.11%)</title><rect x="0.0131%" y="549" width="11.1133%" height="15" fill="rgb(230,116,27)" fg:x="2" fg:w="1694"/><text x="0.2631%" y="559.50">hashbrown::raw::..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,694 samples, 11.11%)</title><rect x="0.0131%" y="533" width="11.1133%" height="15" fill="rgb(228,99,48)" fg:x="2" fg:w="1694"/><text x="0.2631%" y="543.50">core::ptr::mut_p..</text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,hl7_parser::segment::Segments)&gt; (1,694 samples, 11.11%)</title><rect x="0.0131%" y="517" width="11.1133%" height="15" fill="rgb(253,11,6)" fg:x="2" fg:w="1694"/><text x="0.2631%" y="527.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::segment::Segments&gt; (1,694 samples, 11.11%)</title><rect x="0.0131%" y="501" width="11.1133%" height="15" fill="rgb(247,143,39)" fg:x="2" fg:w="1694"/><text x="0.2631%" y="511.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::segment::Segment&gt; (489 samples, 3.21%)</title><rect x="7.9184%" y="485" width="3.2080%" height="15" fill="rgb(236,97,10)" fg:x="1207" fg:w="489"/><text x="8.1684%" y="495.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::field::Field&gt;&gt; (489 samples, 3.21%)</title><rect x="7.9184%" y="469" width="3.2080%" height="15" fill="rgb(233,208,19)" fg:x="1207" fg:w="489"/><text x="8.1684%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (489 samples, 3.21%)</title><rect x="7.9184%" y="453" width="3.2080%" height="15" fill="rgb(216,164,2)" fg:x="1207" fg:w="489"/><text x="8.1684%" y="463.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[hl7_parser::field::Field]&gt; (481 samples, 3.16%)</title><rect x="7.9709%" y="437" width="3.1555%" height="15" fill="rgb(220,129,5)" fg:x="1215" fg:w="481"/><text x="8.2209%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::field::Field&gt; (475 samples, 3.12%)</title><rect x="8.0102%" y="421" width="3.1162%" height="15" fill="rgb(242,17,10)" fg:x="1221" fg:w="475"/><text x="8.2602%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hl7_parser::repeat::Repeat&gt;&gt; (475 samples, 3.12%)</title><rect x="8.0102%" y="405" width="3.1162%" height="15" fill="rgb(242,107,0)" fg:x="1221" fg:w="475"/><text x="8.2602%" y="415.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hl7_parser::repeat::Repeat&gt;&gt; (106 samples, 0.70%)</title><rect x="10.4310%" y="389" width="0.6954%" height="15" fill="rgb(251,28,31)" fg:x="1590" fg:w="106"/><text x="10.6810%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.70%)</title><rect x="10.4310%" y="373" width="0.6954%" height="15" fill="rgb(233,223,10)" fg:x="1590" fg:w="106"/><text x="10.6810%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.04%)</title><rect x="11.0871%" y="357" width="0.0394%" height="15" fill="rgb(215,21,27)" fg:x="1690" fg:w="6"/><text x="11.3371%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hl7_parser::message::Message&gt; (1,698 samples, 11.14%)</title><rect x="0.0000%" y="645" width="11.1395%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="1698"/><text x="0.2500%" y="655.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,hl7_parser::segment::Segments&gt;&gt; (1,698 samples, 11.14%)</title><rect x="0.0000%" y="629" width="11.1395%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="1698"/><text x="0.2500%" y="639.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,hl7_parser::segment::Segments,std::collections::hash::map::RandomState&gt;&gt; (1,698 samples, 11.14%)</title><rect x="0.0000%" y="613" width="11.1395%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="1698"/><text x="0.2500%" y="623.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,hl7_parser::segment::Segments)&gt;&gt; (1,698 samples, 11.14%)</title><rect x="0.0000%" y="597" width="11.1395%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="1698"/><text x="0.2500%" y="607.50">core::ptr::drop_..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,698 samples, 11.14%)</title><rect x="0.0000%" y="581" width="11.1395%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="1698"/><text x="0.2500%" y="591.50">&lt;hashbrown::raw:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (2 samples, 0.01%)</title><rect x="11.1264%" y="565" width="0.0131%" height="15" fill="rgb(240,187,13)" fg:x="1696" fg:w="2"/><text x="11.3764%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.01%)</title><rect x="11.1264%" y="549" width="0.0131%" height="15" fill="rgb(223,113,26)" fg:x="1696" fg:w="2"/><text x="11.3764%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="11.1264%" y="533" width="0.0131%" height="15" fill="rgb(206,192,2)" fg:x="1696" fg:w="2"/><text x="11.3764%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="11.1723%" y="613" width="0.0131%" height="15" fill="rgb(241,108,4)" fg:x="1703" fg:w="2"/><text x="11.4223%" y="623.50"></text></g><g><title>&lt;hl7_parser::segment::Segment as core::convert::From&lt;hl7_parser::header::Msh&gt;&gt;::from (2 samples, 0.01%)</title><rect x="11.1723%" y="597" width="0.0131%" height="15" fill="rgb(247,173,49)" fg:x="1703" fg:w="2"/><text x="11.4223%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="11.1723%" y="581" width="0.0131%" height="15" fill="rgb(224,114,35)" fg:x="1703" fg:w="2"/><text x="11.4223%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (2 samples, 0.01%)</title><rect x="11.1855%" y="533" width="0.0131%" height="15" fill="rgb(245,159,27)" fg:x="1705" fg:w="2"/><text x="11.4355%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="11.1855%" y="613" width="0.0197%" height="15" fill="rgb(245,172,44)" fg:x="1705" fg:w="3"/><text x="11.4355%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="11.1855%" y="597" width="0.0197%" height="15" fill="rgb(236,23,11)" fg:x="1705" fg:w="3"/><text x="11.4355%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new (3 samples, 0.02%)</title><rect x="11.1855%" y="581" width="0.0197%" height="15" fill="rgb(205,117,38)" fg:x="1705" fg:w="3"/><text x="11.4355%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="11.1855%" y="565" width="0.0197%" height="15" fill="rgb(237,72,25)" fg:x="1705" fg:w="3"/><text x="11.4355%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.02%)</title><rect x="11.1855%" y="549" width="0.0197%" height="15" fill="rgb(244,70,9)" fg:x="1705" fg:w="3"/><text x="11.4355%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.05%)</title><rect x="11.2117%" y="613" width="0.0525%" height="15" fill="rgb(217,125,39)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.05%)</title><rect x="11.2117%" y="597" width="0.0525%" height="15" fill="rgb(235,36,10)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.05%)</title><rect x="11.2117%" y="581" width="0.0525%" height="15" fill="rgb(251,123,47)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.05%)</title><rect x="11.2117%" y="565" width="0.0525%" height="15" fill="rgb(221,13,13)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.05%)</title><rect x="11.2117%" y="549" width="0.0525%" height="15" fill="rgb(238,131,9)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.05%)</title><rect x="11.2117%" y="533" width="0.0525%" height="15" fill="rgb(211,50,8)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="543.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.05%)</title><rect x="11.2117%" y="517" width="0.0525%" height="15" fill="rgb(245,182,24)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="527.50"></text></g><g><title>realloc (8 samples, 0.05%)</title><rect x="11.2117%" y="501" width="0.0525%" height="15" fill="rgb(242,14,37)" fg:x="1709" fg:w="8"/><text x="11.4617%" y="511.50"></text></g><g><title>[libc.so.6] (7 samples, 0.05%)</title><rect x="11.2183%" y="485" width="0.0459%" height="15" fill="rgb(246,228,12)" fg:x="1710" fg:w="7"/><text x="11.4683%" y="495.50"></text></g><g><title>[libc.so.6] (7 samples, 0.05%)</title><rect x="11.2183%" y="469" width="0.0459%" height="15" fill="rgb(213,55,15)" fg:x="1710" fg:w="7"/><text x="11.4683%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="11.5463%" y="341" width="0.0197%" height="15" fill="rgb(209,9,3)" fg:x="1760" fg:w="3"/><text x="11.7963%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (5 samples, 0.03%)</title><rect x="11.6447%" y="277" width="0.0328%" height="15" fill="rgb(230,59,30)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (5 samples, 0.03%)</title><rect x="11.6447%" y="261" width="0.0328%" height="15" fill="rgb(209,121,21)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.03%)</title><rect x="11.6447%" y="245" width="0.0328%" height="15" fill="rgb(220,109,13)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="255.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.03%)</title><rect x="11.6447%" y="229" width="0.0328%" height="15" fill="rgb(232,18,1)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.03%)</title><rect x="11.6447%" y="213" width="0.0328%" height="15" fill="rgb(215,41,42)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.03%)</title><rect x="11.6447%" y="197" width="0.0328%" height="15" fill="rgb(224,123,36)" fg:x="1775" fg:w="5"/><text x="11.8947%" y="207.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::position (11 samples, 0.07%)</title><rect x="11.6119%" y="293" width="0.0722%" height="15" fill="rgb(240,125,3)" fg:x="1770" fg:w="11"/><text x="11.8619%" y="303.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="11.7759%" y="261" width="0.0131%" height="15" fill="rgb(205,98,50)" fg:x="1795" fg:w="2"/><text x="12.0259%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="11.7890%" y="261" width="0.0131%" height="15" fill="rgb(205,185,37)" fg:x="1797" fg:w="2"/><text x="12.0390%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (4 samples, 0.03%)</title><rect x="11.8021%" y="261" width="0.0262%" height="15" fill="rgb(238,207,15)" fg:x="1799" fg:w="4"/><text x="12.0521%" y="271.50"></text></g><g><title>nom::bytes::complete::take_till::{{closure}} (43 samples, 0.28%)</title><rect x="11.5660%" y="341" width="0.2821%" height="15" fill="rgb(213,199,42)" fg:x="1763" fg:w="43"/><text x="11.8160%" y="351.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (43 samples, 0.28%)</title><rect x="11.5660%" y="325" width="0.2821%" height="15" fill="rgb(235,201,11)" fg:x="1763" fg:w="43"/><text x="11.8160%" y="335.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position (37 samples, 0.24%)</title><rect x="11.6053%" y="309" width="0.2427%" height="15" fill="rgb(207,46,11)" fg:x="1769" fg:w="37"/><text x="11.8553%" y="319.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (25 samples, 0.16%)</title><rect x="11.6841%" y="293" width="0.1640%" height="15" fill="rgb(241,35,35)" fg:x="1781" fg:w="25"/><text x="11.9341%" y="303.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (22 samples, 0.14%)</title><rect x="11.7037%" y="277" width="0.1443%" height="15" fill="rgb(243,32,47)" fg:x="1784" fg:w="22"/><text x="11.9537%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="11.8284%" y="261" width="0.0197%" height="15" fill="rgb(247,202,23)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="11.8284%" y="245" width="0.0197%" height="15" fill="rgb(219,102,11)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="255.50"></text></g><g><title>&lt;memchr::memchr::iter::Memchr as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="11.8284%" y="229" width="0.0197%" height="15" fill="rgb(243,110,44)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="239.50"></text></g><g><title>memchr::memchr::memchr (3 samples, 0.02%)</title><rect x="11.8284%" y="213" width="0.0197%" height="15" fill="rgb(222,74,54)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="223.50"></text></g><g><title>memchr::memchr::memchr::imp (3 samples, 0.02%)</title><rect x="11.8284%" y="197" width="0.0197%" height="15" fill="rgb(216,99,12)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="207.50"></text></g><g><title>memchr::memchr::x86::memchr (3 samples, 0.02%)</title><rect x="11.8284%" y="181" width="0.0197%" height="15" fill="rgb(226,22,26)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="191.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (3 samples, 0.02%)</title><rect x="11.8284%" y="165" width="0.0197%" height="15" fill="rgb(217,163,10)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="175.50"></text></g><g><title>memchr::memchr::x86::sse2::memchr (3 samples, 0.02%)</title><rect x="11.8284%" y="149" width="0.0197%" height="15" fill="rgb(213,25,53)" fg:x="1803" fg:w="3"/><text x="12.0784%" y="159.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="12.0646%" y="277" width="0.0131%" height="15" fill="rgb(252,105,26)" fg:x="1839" fg:w="2"/><text x="12.3146%" y="287.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="12.0777%" y="277" width="0.0131%" height="15" fill="rgb(220,39,43)" fg:x="1841" fg:w="2"/><text x="12.3277%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (86 samples, 0.56%)</title><rect x="11.5332%" y="373" width="0.5642%" height="15" fill="rgb(229,68,48)" fg:x="1758" fg:w="86"/><text x="11.7832%" y="383.50"></text></g><g><title>hl7_parser::parser::sub_component_parser::{{closure}} (86 samples, 0.56%)</title><rect x="11.5332%" y="357" width="0.5642%" height="15" fill="rgb(252,8,32)" fg:x="1758" fg:w="86"/><text x="11.7832%" y="367.50"></text></g><g><title>nom_locate::position (38 samples, 0.25%)</title><rect x="11.8481%" y="341" width="0.2493%" height="15" fill="rgb(223,20,43)" fg:x="1806" fg:w="38"/><text x="12.0981%" y="351.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (32 samples, 0.21%)</title><rect x="11.8874%" y="325" width="0.2099%" height="15" fill="rgb(229,81,49)" fg:x="1812" fg:w="32"/><text x="12.1374%" y="335.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (27 samples, 0.18%)</title><rect x="11.9202%" y="309" width="0.1771%" height="15" fill="rgb(236,28,36)" fg:x="1817" fg:w="27"/><text x="12.1702%" y="319.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (18 samples, 0.12%)</title><rect x="11.9793%" y="293" width="0.1181%" height="15" fill="rgb(249,185,26)" fg:x="1826" fg:w="18"/><text x="12.2293%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.05%)</title><rect x="12.0974%" y="373" width="0.0525%" height="15" fill="rgb(249,174,33)" fg:x="1844" fg:w="8"/><text x="12.3474%" y="383.50"></text></g><g><title>core::ptr::write (8 samples, 0.05%)</title><rect x="12.0974%" y="357" width="0.0525%" height="15" fill="rgb(233,201,37)" fg:x="1844" fg:w="8"/><text x="12.3474%" y="367.50"></text></g><g><title>hl7_parser::parser::sub_components_parser::{{closure}} (122 samples, 0.80%)</title><rect x="11.5332%" y="405" width="0.8004%" height="15" fill="rgb(221,78,26)" fg:x="1758" fg:w="122"/><text x="11.7832%" y="415.50"></text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (122 samples, 0.80%)</title><rect x="11.5332%" y="389" width="0.8004%" height="15" fill="rgb(250,127,30)" fg:x="1758" fg:w="122"/><text x="11.7832%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.18%)</title><rect x="12.1498%" y="373" width="0.1837%" height="15" fill="rgb(230,49,44)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.18%)</title><rect x="12.1498%" y="357" width="0.1837%" height="15" fill="rgb(229,67,23)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.18%)</title><rect x="12.1498%" y="341" width="0.1837%" height="15" fill="rgb(249,83,47)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.18%)</title><rect x="12.1498%" y="325" width="0.1837%" height="15" fill="rgb(215,43,3)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.18%)</title><rect x="12.1498%" y="309" width="0.1837%" height="15" fill="rgb(238,154,13)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.18%)</title><rect x="12.1498%" y="293" width="0.1837%" height="15" fill="rgb(219,56,2)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="303.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.18%)</title><rect x="12.1498%" y="277" width="0.1837%" height="15" fill="rgb(233,0,4)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="287.50"></text></g><g><title>malloc (28 samples, 0.18%)</title><rect x="12.1498%" y="261" width="0.1837%" height="15" fill="rgb(235,30,7)" fg:x="1852" fg:w="28"/><text x="12.3998%" y="271.50"></text></g><g><title>[libc.so.6] (24 samples, 0.16%)</title><rect x="12.1761%" y="245" width="0.1574%" height="15" fill="rgb(250,79,13)" fg:x="1856" fg:w="24"/><text x="12.4261%" y="255.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (6 samples, 0.04%)</title><rect x="12.4910%" y="373" width="0.0394%" height="15" fill="rgb(211,146,34)" fg:x="1904" fg:w="6"/><text x="12.7410%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (6 samples, 0.04%)</title><rect x="12.4910%" y="357" width="0.0394%" height="15" fill="rgb(228,22,38)" fg:x="1904" fg:w="6"/><text x="12.7410%" y="367.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="12.4910%" y="341" width="0.0394%" height="15" fill="rgb(235,168,5)" fg:x="1904" fg:w="6"/><text x="12.7410%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="12.4910%" y="325" width="0.0394%" height="15" fill="rgb(221,155,16)" fg:x="1904" fg:w="6"/><text x="12.7410%" y="335.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.04%)</title><rect x="12.4910%" y="309" width="0.0394%" height="15" fill="rgb(215,215,53)" fg:x="1904" fg:w="6"/><text x="12.7410%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="12.5107%" y="293" width="0.0197%" height="15" fill="rgb(223,4,10)" fg:x="1907" fg:w="3"/><text x="12.7607%" y="303.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (3 samples, 0.02%)</title><rect x="12.6615%" y="341" width="0.0197%" height="15" fill="rgb(234,103,6)" fg:x="1930" fg:w="3"/><text x="12.9115%" y="351.50"></text></g><g><title>hl7_parser::parser::component_parser::{{closure}} (182 samples, 1.19%)</title><rect x="11.5069%" y="421" width="1.1940%" height="15" fill="rgb(227,97,0)" fg:x="1754" fg:w="182"/><text x="11.7569%" y="431.50"></text></g><g><title>nom_locate::position (56 samples, 0.37%)</title><rect x="12.3335%" y="405" width="0.3674%" height="15" fill="rgb(234,150,53)" fg:x="1880" fg:w="56"/><text x="12.5835%" y="415.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (48 samples, 0.31%)</title><rect x="12.3860%" y="389" width="0.3149%" height="15" fill="rgb(228,201,54)" fg:x="1888" fg:w="48"/><text x="12.6360%" y="399.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (26 samples, 0.17%)</title><rect x="12.5303%" y="373" width="0.1706%" height="15" fill="rgb(222,22,37)" fg:x="1910" fg:w="26"/><text x="12.7803%" y="383.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (10 samples, 0.07%)</title><rect x="12.6353%" y="357" width="0.0656%" height="15" fill="rgb(237,53,32)" fg:x="1926" fg:w="10"/><text x="12.8853%" y="367.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.02%)</title><rect x="12.6812%" y="341" width="0.0197%" height="15" fill="rgb(233,25,53)" fg:x="1933" fg:w="3"/><text x="12.9312%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (185 samples, 1.21%)</title><rect x="11.5069%" y="437" width="1.2137%" height="15" fill="rgb(210,40,34)" fg:x="1754" fg:w="185"/><text x="11.7569%" y="447.50"></text></g><g><title>nom::character::complete::char::{{closure}} (3 samples, 0.02%)</title><rect x="12.7009%" y="421" width="0.0197%" height="15" fill="rgb(241,220,44)" fg:x="1936" fg:w="3"/><text x="12.9509%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="12.7075%" y="405" width="0.0131%" height="15" fill="rgb(235,28,35)" fg:x="1937" fg:w="2"/><text x="12.9575%" y="415.50"></text></g><g><title>[libc.so.6] (49 samples, 0.32%)</title><rect x="12.7337%" y="309" width="0.3215%" height="15" fill="rgb(210,56,17)" fg:x="1941" fg:w="49"/><text x="12.9837%" y="319.50"></text></g><g><title>hl7_parser::parser::components_parser::{{closure}} (248 samples, 1.63%)</title><rect x="11.4348%" y="469" width="1.6270%" height="15" fill="rgb(224,130,29)" fg:x="1743" fg:w="248"/><text x="11.6848%" y="479.50"></text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (248 samples, 1.63%)</title><rect x="11.4348%" y="453" width="1.6270%" height="15" fill="rgb(235,212,8)" fg:x="1743" fg:w="248"/><text x="11.6848%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (52 samples, 0.34%)</title><rect x="12.7206%" y="437" width="0.3411%" height="15" fill="rgb(223,33,50)" fg:x="1939" fg:w="52"/><text x="12.9706%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 0.34%)</title><rect x="12.7206%" y="421" width="0.3411%" height="15" fill="rgb(219,149,13)" fg:x="1939" fg:w="52"/><text x="12.9706%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (52 samples, 0.34%)</title><rect x="12.7206%" y="405" width="0.3411%" height="15" fill="rgb(250,156,29)" fg:x="1939" fg:w="52"/><text x="12.9706%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (52 samples, 0.34%)</title><rect x="12.7206%" y="389" width="0.3411%" height="15" fill="rgb(216,193,19)" fg:x="1939" fg:w="52"/><text x="12.9706%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.33%)</title><rect x="12.7272%" y="373" width="0.3346%" height="15" fill="rgb(216,135,14)" fg:x="1940" fg:w="51"/><text x="12.9772%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.33%)</title><rect x="12.7272%" y="357" width="0.3346%" height="15" fill="rgb(241,47,5)" fg:x="1940" fg:w="51"/><text x="12.9772%" y="367.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.33%)</title><rect x="12.7272%" y="341" width="0.3346%" height="15" fill="rgb(233,42,35)" fg:x="1940" fg:w="51"/><text x="12.9772%" y="351.50"></text></g><g><title>malloc (50 samples, 0.33%)</title><rect x="12.7337%" y="325" width="0.3280%" height="15" fill="rgb(231,13,6)" fg:x="1941" fg:w="50"/><text x="12.9837%" y="335.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (2 samples, 0.01%)</title><rect x="13.2454%" y="437" width="0.0131%" height="15" fill="rgb(207,181,40)" fg:x="2019" fg:w="2"/><text x="13.4954%" y="447.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (2 samples, 0.01%)</title><rect x="13.2454%" y="421" width="0.0131%" height="15" fill="rgb(254,173,49)" fg:x="2019" fg:w="2"/><text x="13.4954%" y="431.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.2454%" y="405" width="0.0131%" height="15" fill="rgb(221,1,38)" fg:x="2019" fg:w="2"/><text x="13.4954%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.2454%" y="389" width="0.0131%" height="15" fill="rgb(206,124,46)" fg:x="2019" fg:w="2"/><text x="13.4954%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.01%)</title><rect x="13.2454%" y="373" width="0.0131%" height="15" fill="rgb(249,21,11)" fg:x="2019" fg:w="2"/><text x="13.4954%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="13.5210%" y="405" width="0.0131%" height="15" fill="rgb(222,201,40)" fg:x="2061" fg:w="2"/><text x="13.7710%" y="415.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="13.5341%" y="405" width="0.0131%" height="15" fill="rgb(235,61,29)" fg:x="2063" fg:w="2"/><text x="13.7841%" y="415.50"></text></g><g><title>hl7_parser::parser::repeat_parser::{{closure}} (329 samples, 2.16%)</title><rect x="11.4085%" y="485" width="2.1584%" height="15" fill="rgb(219,207,3)" fg:x="1739" fg:w="329"/><text x="11.6585%" y="495.50">h..</text></g><g><title>nom_locate::position (77 samples, 0.51%)</title><rect x="13.0617%" y="469" width="0.5051%" height="15" fill="rgb(222,56,46)" fg:x="1991" fg:w="77"/><text x="13.3117%" y="479.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (62 samples, 0.41%)</title><rect x="13.1601%" y="453" width="0.4067%" height="15" fill="rgb(239,76,54)" fg:x="2006" fg:w="62"/><text x="13.4101%" y="463.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (47 samples, 0.31%)</title><rect x="13.2585%" y="437" width="0.3083%" height="15" fill="rgb(231,124,27)" fg:x="2021" fg:w="47"/><text x="13.5085%" y="447.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (30 samples, 0.20%)</title><rect x="13.3701%" y="421" width="0.1968%" height="15" fill="rgb(249,195,6)" fg:x="2038" fg:w="30"/><text x="13.6201%" y="431.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.02%)</title><rect x="13.5472%" y="405" width="0.0197%" height="15" fill="rgb(237,174,47)" fg:x="2065" fg:w="3"/><text x="13.7972%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (330 samples, 2.16%)</title><rect x="11.4085%" y="501" width="2.1649%" height="15" fill="rgb(206,201,31)" fg:x="1739" fg:w="330"/><text x="11.6585%" y="511.50">&lt;..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="13.5734%" y="501" width="0.0197%" height="15" fill="rgb(231,57,52)" fg:x="2069" fg:w="3"/><text x="13.8234%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="13.5931%" y="501" width="0.0131%" height="15" fill="rgb(248,177,22)" fg:x="2072" fg:w="2"/><text x="13.8431%" y="511.50"></text></g><g><title>hl7_parser::parser::repeats_parser::{{closure}} (354 samples, 2.32%)</title><rect x="11.3429%" y="533" width="2.3224%" height="15" fill="rgb(215,211,37)" fg:x="1729" fg:w="354"/><text x="11.5929%" y="543.50">h..</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (354 samples, 2.32%)</title><rect x="11.3429%" y="517" width="2.3224%" height="15" fill="rgb(241,128,51)" fg:x="1729" fg:w="354"/><text x="11.5929%" y="527.50">h..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.06%)</title><rect x="13.6062%" y="501" width="0.0590%" height="15" fill="rgb(227,165,31)" fg:x="2074" fg:w="9"/><text x="13.8562%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="13.6062%" y="485" width="0.0590%" height="15" fill="rgb(228,167,24)" fg:x="2074" fg:w="9"/><text x="13.8562%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="13.6062%" y="469" width="0.0590%" height="15" fill="rgb(228,143,12)" fg:x="2074" fg:w="9"/><text x="13.8562%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.06%)</title><rect x="13.6062%" y="453" width="0.0590%" height="15" fill="rgb(249,149,8)" fg:x="2074" fg:w="9"/><text x="13.8562%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.05%)</title><rect x="13.6128%" y="437" width="0.0525%" height="15" fill="rgb(243,35,44)" fg:x="2075" fg:w="8"/><text x="13.8628%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.05%)</title><rect x="13.6128%" y="421" width="0.0525%" height="15" fill="rgb(246,89,9)" fg:x="2075" fg:w="8"/><text x="13.8628%" y="431.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.05%)</title><rect x="13.6128%" y="405" width="0.0525%" height="15" fill="rgb(233,213,13)" fg:x="2075" fg:w="8"/><text x="13.8628%" y="415.50"></text></g><g><title>malloc (8 samples, 0.05%)</title><rect x="13.6128%" y="389" width="0.0525%" height="15" fill="rgb(233,141,41)" fg:x="2075" fg:w="8"/><text x="13.8628%" y="399.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="13.6325%" y="373" width="0.0328%" height="15" fill="rgb(239,167,4)" fg:x="2078" fg:w="5"/><text x="13.8825%" y="383.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (2 samples, 0.01%)</title><rect x="13.8490%" y="501" width="0.0131%" height="15" fill="rgb(209,217,16)" fg:x="2111" fg:w="2"/><text x="14.0990%" y="511.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (2 samples, 0.01%)</title><rect x="13.8490%" y="485" width="0.0131%" height="15" fill="rgb(219,88,35)" fg:x="2111" fg:w="2"/><text x="14.0990%" y="495.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.8490%" y="469" width="0.0131%" height="15" fill="rgb(220,193,23)" fg:x="2111" fg:w="2"/><text x="14.0990%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.8490%" y="453" width="0.0131%" height="15" fill="rgb(230,90,52)" fg:x="2111" fg:w="2"/><text x="14.0990%" y="463.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.01%)</title><rect x="13.8490%" y="437" width="0.0131%" height="15" fill="rgb(252,106,19)" fg:x="2111" fg:w="2"/><text x="14.0990%" y="447.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="14.0327%" y="469" width="0.0131%" height="15" fill="rgb(206,74,20)" fg:x="2139" fg:w="2"/><text x="14.2827%" y="479.50"></text></g><g><title>hl7_parser::parser::field_parser::{{closure}} (417 samples, 2.74%)</title><rect x="11.3298%" y="549" width="2.7357%" height="15" fill="rgb(230,138,44)" fg:x="1727" fg:w="417"/><text x="11.5798%" y="559.50">hl..</text></g><g><title>nom_locate::position (61 samples, 0.40%)</title><rect x="13.6653%" y="533" width="0.4002%" height="15" fill="rgb(235,182,43)" fg:x="2083" fg:w="61"/><text x="13.9153%" y="543.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (49 samples, 0.32%)</title><rect x="13.7440%" y="517" width="0.3215%" height="15" fill="rgb(242,16,51)" fg:x="2095" fg:w="49"/><text x="13.9940%" y="527.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (31 samples, 0.20%)</title><rect x="13.8621%" y="501" width="0.2034%" height="15" fill="rgb(248,9,4)" fg:x="2113" fg:w="31"/><text x="14.1121%" y="511.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (23 samples, 0.15%)</title><rect x="13.9146%" y="485" width="0.1509%" height="15" fill="rgb(210,31,22)" fg:x="2121" fg:w="23"/><text x="14.1646%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="14.1770%" y="517" width="0.0131%" height="15" fill="rgb(239,54,39)" fg:x="2161" fg:w="2"/><text x="14.4270%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (438 samples, 2.87%)</title><rect x="11.3232%" y="565" width="2.8735%" height="15" fill="rgb(230,99,41)" fg:x="1726" fg:w="438"/><text x="11.5732%" y="575.50">&lt;F..</text></g><g><title>nom::character::complete::char::{{closure}} (20 samples, 0.13%)</title><rect x="14.0655%" y="549" width="0.1312%" height="15" fill="rgb(253,106,12)" fg:x="2144" fg:w="20"/><text x="14.3155%" y="559.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (17 samples, 0.11%)</title><rect x="14.0852%" y="533" width="0.1115%" height="15" fill="rgb(213,46,41)" fg:x="2147" fg:w="17"/><text x="14.3352%" y="543.50"></text></g><g><title>hl7_parser::parser::fields_parser::{{closure}} (447 samples, 2.93%)</title><rect x="11.2773%" y="597" width="2.9325%" height="15" fill="rgb(215,133,35)" fg:x="1719" fg:w="447"/><text x="11.5273%" y="607.50">hl..</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (447 samples, 2.93%)</title><rect x="11.2773%" y="581" width="2.9325%" height="15" fill="rgb(213,28,5)" fg:x="1719" fg:w="447"/><text x="11.5273%" y="591.50">hl..</text></g><g><title>hl7_parser::parser::parse_separators (2 samples, 0.01%)</title><rect x="14.2098%" y="597" width="0.0131%" height="15" fill="rgb(215,77,49)" fg:x="2166" fg:w="2"/><text x="14.4598%" y="607.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (2 samples, 0.01%)</title><rect x="14.2098%" y="581" width="0.0131%" height="15" fill="rgb(248,100,22)" fg:x="2166" fg:w="2"/><text x="14.4598%" y="591.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (3 samples, 0.02%)</title><rect x="14.2229%" y="597" width="0.0197%" height="15" fill="rgb(208,67,9)" fg:x="2168" fg:w="3"/><text x="14.4729%" y="607.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (3 samples, 0.02%)</title><rect x="14.2229%" y="581" width="0.0197%" height="15" fill="rgb(219,133,21)" fg:x="2168" fg:w="3"/><text x="14.4729%" y="591.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="14.2295%" y="565" width="0.0131%" height="15" fill="rgb(246,46,29)" fg:x="2169" fg:w="2"/><text x="14.4795%" y="575.50"></text></g><g><title>hl7_parser::parser::parse_msh (464 samples, 3.04%)</title><rect x="11.2707%" y="613" width="3.0440%" height="15" fill="rgb(246,185,52)" fg:x="1718" fg:w="464"/><text x="11.5207%" y="623.50">hl7..</text></g><g><title>nom_locate::position (11 samples, 0.07%)</title><rect x="14.2426%" y="597" width="0.0722%" height="15" fill="rgb(252,136,11)" fg:x="2171" fg:w="11"/><text x="14.4926%" y="607.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (10 samples, 0.07%)</title><rect x="14.2492%" y="581" width="0.0656%" height="15" fill="rgb(219,138,53)" fg:x="2172" fg:w="10"/><text x="14.4992%" y="591.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (8 samples, 0.05%)</title><rect x="14.2623%" y="565" width="0.0525%" height="15" fill="rgb(211,51,23)" fg:x="2174" fg:w="8"/><text x="14.5123%" y="575.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (6 samples, 0.04%)</title><rect x="14.2754%" y="549" width="0.0394%" height="15" fill="rgb(247,221,28)" fg:x="2176" fg:w="6"/><text x="14.5254%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (2 samples, 0.01%)</title><rect x="14.3016%" y="533" width="0.0131%" height="15" fill="rgb(251,222,45)" fg:x="2180" fg:w="2"/><text x="14.5516%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.06%)</title><rect x="14.4985%" y="565" width="0.0590%" height="15" fill="rgb(217,162,53)" fg:x="2210" fg:w="9"/><text x="14.7485%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.14%)</title><rect x="17.8377%" y="501" width="0.1378%" height="15" fill="rgb(229,93,14)" fg:x="2719" fg:w="21"/><text x="18.0877%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.13%)</title><rect x="19.3531%" y="437" width="0.1312%" height="15" fill="rgb(209,67,49)" fg:x="2950" fg:w="20"/><text x="19.6031%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.06%)</title><rect x="23.2172%" y="373" width="0.0590%" height="15" fill="rgb(213,87,29)" fg:x="3539" fg:w="9"/><text x="23.4672%" y="383.50"></text></g><g><title>hl7_parser::parser::separated_list0_cap (7 samples, 0.05%)</title><rect x="23.2763%" y="357" width="0.0459%" height="15" fill="rgb(205,151,52)" fg:x="3548" fg:w="7"/><text x="23.5263%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.20%)</title><rect x="24.6277%" y="309" width="0.2034%" height="15" fill="rgb(253,215,39)" fg:x="3754" fg:w="31"/><text x="24.8777%" y="319.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.14%)</title><rect x="26.8845%" y="245" width="0.1443%" height="15" fill="rgb(221,220,41)" fg:x="4098" fg:w="22"/><text x="27.1345%" y="255.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.14%)</title><rect x="26.8845%" y="229" width="0.1443%" height="15" fill="rgb(218,133,21)" fg:x="4098" fg:w="22"/><text x="27.1345%" y="239.50"></text></g><g><title>core::str::validations::next_code_point (22 samples, 0.14%)</title><rect x="26.8845%" y="213" width="0.1443%" height="15" fill="rgb(221,193,43)" fg:x="4098" fg:w="22"/><text x="27.1345%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.09%)</title><rect x="26.9435%" y="197" width="0.0853%" height="15" fill="rgb(240,128,52)" fg:x="4107" fg:w="13"/><text x="27.1935%" y="207.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (58 samples, 0.38%)</title><rect x="27.0288%" y="245" width="0.3805%" height="15" fill="rgb(253,114,12)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="255.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (58 samples, 0.38%)</title><rect x="27.0288%" y="229" width="0.3805%" height="15" fill="rgb(215,223,47)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (58 samples, 0.38%)</title><rect x="27.0288%" y="213" width="0.3805%" height="15" fill="rgb(248,225,23)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (58 samples, 0.38%)</title><rect x="27.0288%" y="197" width="0.3805%" height="15" fill="rgb(250,108,0)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (58 samples, 0.38%)</title><rect x="27.0288%" y="181" width="0.3805%" height="15" fill="rgb(228,208,7)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (58 samples, 0.38%)</title><rect x="27.0288%" y="165" width="0.3805%" height="15" fill="rgb(244,45,10)" fg:x="4120" fg:w="58"/><text x="27.2788%" y="175.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::position (188 samples, 1.23%)</title><rect x="26.4843%" y="261" width="1.2334%" height="15" fill="rgb(207,125,25)" fg:x="4037" fg:w="188"/><text x="26.7343%" y="271.50"></text></g><g><title>nom::bytes::complete::take_till::{{closure}}::{{closure}} (47 samples, 0.31%)</title><rect x="27.4093%" y="245" width="0.3083%" height="15" fill="rgb(210,195,18)" fg:x="4178" fg:w="47"/><text x="27.6593%" y="255.50"></text></g><g><title>hl7_parser::parser::sub_component_parser::{{closure}}::{{closure}} (47 samples, 0.31%)</title><rect x="27.4093%" y="229" width="0.3083%" height="15" fill="rgb(249,80,12)" fg:x="4178" fg:w="47"/><text x="27.6593%" y="239.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (87 samples, 0.57%)</title><rect x="30.4992%" y="229" width="0.5708%" height="15" fill="rgb(221,65,9)" fg:x="4649" fg:w="87"/><text x="30.7492%" y="239.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (61 samples, 0.40%)</title><rect x="31.0700%" y="229" width="0.4002%" height="15" fill="rgb(235,49,36)" fg:x="4736" fg:w="61"/><text x="31.3200%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (11 samples, 0.07%)</title><rect x="31.3980%" y="213" width="0.0722%" height="15" fill="rgb(225,32,20)" fg:x="4786" fg:w="11"/><text x="31.6480%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (11 samples, 0.07%)</title><rect x="31.3980%" y="197" width="0.0722%" height="15" fill="rgb(215,141,46)" fg:x="4786" fg:w="11"/><text x="31.6480%" y="207.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (11 samples, 0.07%)</title><rect x="31.3980%" y="181" width="0.0722%" height="15" fill="rgb(250,160,47)" fg:x="4786" fg:w="11"/><text x="31.6480%" y="191.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (128 samples, 0.84%)</title><rect x="31.4702%" y="229" width="0.8397%" height="15" fill="rgb(216,222,40)" fg:x="4797" fg:w="128"/><text x="31.7202%" y="239.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (32 samples, 0.21%)</title><rect x="32.1000%" y="213" width="0.2099%" height="15" fill="rgb(234,217,39)" fg:x="4893" fg:w="32"/><text x="32.3500%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (32 samples, 0.21%)</title><rect x="32.1000%" y="197" width="0.2099%" height="15" fill="rgb(207,178,40)" fg:x="4893" fg:w="32"/><text x="32.3500%" y="207.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (32 samples, 0.21%)</title><rect x="32.1000%" y="181" width="0.2099%" height="15" fill="rgb(221,136,13)" fg:x="4893" fg:w="32"/><text x="32.3500%" y="191.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (7 samples, 0.05%)</title><rect x="32.2640%" y="165" width="0.0459%" height="15" fill="rgb(249,199,10)" fg:x="4918" fg:w="7"/><text x="32.5140%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.05%)</title><rect x="32.2640%" y="149" width="0.0459%" height="15" fill="rgb(249,222,13)" fg:x="4918" fg:w="7"/><text x="32.5140%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (7 samples, 0.05%)</title><rect x="32.2640%" y="133" width="0.0459%" height="15" fill="rgb(244,185,38)" fg:x="4918" fg:w="7"/><text x="32.5140%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="32.3099%" y="181" width="0.0131%" height="15" fill="rgb(236,202,9)" fg:x="4925" fg:w="2"/><text x="32.5599%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (5 samples, 0.03%)</title><rect x="32.3427%" y="133" width="0.0328%" height="15" fill="rgb(250,229,37)" fg:x="4930" fg:w="5"/><text x="32.5927%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.03%)</title><rect x="32.3427%" y="117" width="0.0328%" height="15" fill="rgb(206,174,23)" fg:x="4930" fg:w="5"/><text x="32.5927%" y="127.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position (989 samples, 6.49%)</title><rect x="26.1235%" y="277" width="6.4882%" height="15" fill="rgb(211,33,43)" fg:x="3982" fg:w="989"/><text x="26.3735%" y="287.50">&lt;nom_loc..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (746 samples, 4.89%)</title><rect x="27.7176%" y="261" width="4.8940%" height="15" fill="rgb(245,58,50)" fg:x="4225" fg:w="746"/><text x="27.9676%" y="271.50">&lt;nom_l..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (467 samples, 3.06%)</title><rect x="29.5480%" y="245" width="3.0637%" height="15" fill="rgb(244,68,36)" fg:x="4504" fg:w="467"/><text x="29.7980%" y="255.50">&lt;no..</text></g><g><title>core::iter::traits::iterator::Iterator::count (46 samples, 0.30%)</title><rect x="32.3099%" y="229" width="0.3018%" height="15" fill="rgb(232,229,15)" fg:x="4925" fg:w="46"/><text x="32.5599%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 0.30%)</title><rect x="32.3099%" y="213" width="0.3018%" height="15" fill="rgb(254,30,23)" fg:x="4925" fg:w="46"/><text x="32.5599%" y="223.50"></text></g><g><title>&lt;memchr::memchr::iter::Memchr as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.30%)</title><rect x="32.3099%" y="197" width="0.3018%" height="15" fill="rgb(235,160,14)" fg:x="4925" fg:w="46"/><text x="32.5599%" y="207.50"></text></g><g><title>memchr::memchr::memchr (44 samples, 0.29%)</title><rect x="32.3230%" y="181" width="0.2887%" height="15" fill="rgb(212,155,44)" fg:x="4927" fg:w="44"/><text x="32.5730%" y="191.50"></text></g><g><title>memchr::memchr::memchr::imp (44 samples, 0.29%)</title><rect x="32.3230%" y="165" width="0.2887%" height="15" fill="rgb(226,2,50)" fg:x="4927" fg:w="44"/><text x="32.5730%" y="175.50"></text></g><g><title>memchr::memchr::x86::memchr (44 samples, 0.29%)</title><rect x="32.3230%" y="149" width="0.2887%" height="15" fill="rgb(234,177,6)" fg:x="4927" fg:w="44"/><text x="32.5730%" y="159.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (36 samples, 0.24%)</title><rect x="32.3755%" y="133" width="0.2362%" height="15" fill="rgb(217,24,9)" fg:x="4935" fg:w="36"/><text x="32.6255%" y="143.50"></text></g><g><title>memchr::memchr::x86::sse2::memchr (28 samples, 0.18%)</title><rect x="32.4280%" y="117" width="0.1837%" height="15" fill="rgb(220,13,46)" fg:x="4943" fg:w="28"/><text x="32.6780%" y="127.50"></text></g><g><title>nom::bytes::complete::take_till::{{closure}} (1,186 samples, 7.78%)</title><rect x="24.8376%" y="309" width="7.7806%" height="15" fill="rgb(239,221,27)" fg:x="3786" fg:w="1186"/><text x="25.0876%" y="319.50">nom::bytes:..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (1,186 samples, 7.78%)</title><rect x="24.8376%" y="293" width="7.7806%" height="15" fill="rgb(222,198,25)" fg:x="3786" fg:w="1186"/><text x="25.0876%" y="303.50">&lt;nom_locate..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (128 samples, 0.84%)</title><rect x="36.4430%" y="277" width="0.8397%" height="15" fill="rgb(211,99,13)" fg:x="5555" fg:w="128"/><text x="36.6930%" y="287.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (128 samples, 0.84%)</title><rect x="36.4430%" y="261" width="0.8397%" height="15" fill="rgb(232,111,31)" fg:x="5555" fg:w="128"/><text x="36.6930%" y="271.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.84%)</title><rect x="36.4430%" y="245" width="0.8397%" height="15" fill="rgb(245,82,37)" fg:x="5555" fg:w="128"/><text x="36.6930%" y="255.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.84%)</title><rect x="36.4430%" y="229" width="0.8397%" height="15" fill="rgb(227,149,46)" fg:x="5555" fg:w="128"/><text x="36.6930%" y="239.50"></text></g><g><title>core::str::validations::next_code_point (128 samples, 0.84%)</title><rect x="36.4430%" y="213" width="0.8397%" height="15" fill="rgb(218,36,50)" fg:x="5555" fg:w="128"/><text x="36.6930%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.43%)</title><rect x="36.8497%" y="197" width="0.4330%" height="15" fill="rgb(226,80,48)" fg:x="5617" fg:w="66"/><text x="37.0997%" y="207.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (71 samples, 0.47%)</title><rect x="39.8937%" y="245" width="0.4658%" height="15" fill="rgb(238,224,15)" fg:x="6081" fg:w="71"/><text x="40.1437%" y="255.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (44 samples, 0.29%)</title><rect x="40.3595%" y="245" width="0.2887%" height="15" fill="rgb(241,136,10)" fg:x="6152" fg:w="44"/><text x="40.6095%" y="255.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (542 samples, 3.56%)</title><rect x="37.2827%" y="277" width="3.5557%" height="15" fill="rgb(208,32,45)" fg:x="5683" fg:w="542"/><text x="37.5327%" y="287.50">&lt;nom..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (201 samples, 1.32%)</title><rect x="39.5198%" y="261" width="1.3186%" height="15" fill="rgb(207,135,9)" fg:x="6024" fg:w="201"/><text x="39.7698%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (29 samples, 0.19%)</title><rect x="40.6482%" y="245" width="0.1903%" height="15" fill="rgb(206,86,44)" fg:x="6196" fg:w="29"/><text x="40.8982%" y="255.50"></text></g><g><title>hl7_parser::parser::sub_component_parser::{{closure}} (2,645 samples, 17.35%)</title><rect x="23.4928%" y="325" width="17.3522%" height="15" fill="rgb(245,177,15)" fg:x="3581" fg:w="2645"/><text x="23.7428%" y="335.50">hl7_parser::parser::sub_com..</text></g><g><title>nom_locate::position (1,254 samples, 8.23%)</title><rect x="32.6183%" y="309" width="8.2267%" height="15" fill="rgb(206,64,50)" fg:x="4972" fg:w="1254"/><text x="32.8683%" y="319.50">nom_locate:..</text></g><g><title>nom::bytes::complete::take::{{closure}} (905 samples, 5.94%)</title><rect x="34.9078%" y="293" width="5.9372%" height="15" fill="rgb(234,36,40)" fg:x="5321" fg:w="905"/><text x="35.1578%" y="303.50">nom::byt..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="40.8450%" y="309" width="0.0656%" height="15" fill="rgb(213,64,8)" fg:x="6226" fg:w="10"/><text x="41.0950%" y="319.50"></text></g><g><title>core::str::validations::next_code_point (10 samples, 0.07%)</title><rect x="40.8450%" y="293" width="0.0656%" height="15" fill="rgb(210,75,36)" fg:x="6226" fg:w="10"/><text x="41.0950%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="40.8450%" y="277" width="0.0656%" height="15" fill="rgb(229,88,21)" fg:x="6226" fg:w="10"/><text x="41.0950%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,679 samples, 17.58%)</title><rect x="23.4140%" y="341" width="17.5753%" height="15" fill="rgb(252,204,47)" fg:x="3569" fg:w="2679"/><text x="23.6640%" y="351.50">&lt;F as nom::internal::Parser..</text></g><g><title>nom::character::complete::char::{{closure}} (22 samples, 0.14%)</title><rect x="40.8450%" y="325" width="0.1443%" height="15" fill="rgb(208,77,27)" fg:x="6226" fg:w="22"/><text x="41.0950%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.08%)</title><rect x="40.9106%" y="309" width="0.0787%" height="15" fill="rgb(221,76,26)" fg:x="6236" fg:w="12"/><text x="41.1606%" y="319.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as core::clone::Clone&gt;::clone (21 samples, 0.14%)</title><rect x="40.9893%" y="341" width="0.1378%" height="15" fill="rgb(225,139,18)" fg:x="6248" fg:w="21"/><text x="41.2393%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (327 samples, 2.15%)</title><rect x="41.1271%" y="341" width="2.1452%" height="15" fill="rgb(230,137,11)" fg:x="6269" fg:w="327"/><text x="41.3771%" y="351.50">a..</text></g><g><title>core::ptr::write (291 samples, 1.91%)</title><rect x="41.3632%" y="325" width="1.9091%" height="15" fill="rgb(212,28,1)" fg:x="6305" fg:w="291"/><text x="41.6132%" y="335.50">c..</text></g><g><title>__rdl_alloc (12 samples, 0.08%)</title><rect x="43.3182%" y="229" width="0.0787%" height="15" fill="rgb(248,164,17)" fg:x="6603" fg:w="12"/><text x="43.5682%" y="239.50"></text></g><g><title>__rust_alloc (19 samples, 0.12%)</title><rect x="43.3970%" y="229" width="0.1246%" height="15" fill="rgb(222,171,42)" fg:x="6615" fg:w="19"/><text x="43.6470%" y="239.50"></text></g><g><title>hl7_parser::parser::sub_components_parser::{{closure}} (3,398 samples, 22.29%)</title><rect x="23.2763%" y="373" width="22.2922%" height="15" fill="rgb(243,84,45)" fg:x="3548" fg:w="3398"/><text x="23.5263%" y="383.50">hl7_parser::parser::sub_components_..</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (3,391 samples, 22.25%)</title><rect x="23.3222%" y="357" width="22.2463%" height="15" fill="rgb(252,49,23)" fg:x="3555" fg:w="3391"/><text x="23.5722%" y="367.50">hl7_parser::parser::separated_list0..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (350 samples, 2.30%)</title><rect x="43.2723%" y="341" width="2.2961%" height="15" fill="rgb(215,19,7)" fg:x="6596" fg:w="350"/><text x="43.5223%" y="351.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (350 samples, 2.30%)</title><rect x="43.2723%" y="325" width="2.2961%" height="15" fill="rgb(238,81,41)" fg:x="6596" fg:w="350"/><text x="43.5223%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (346 samples, 2.27%)</title><rect x="43.2986%" y="309" width="2.2699%" height="15" fill="rgb(210,199,37)" fg:x="6600" fg:w="346"/><text x="43.5486%" y="319.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (346 samples, 2.27%)</title><rect x="43.2986%" y="293" width="2.2699%" height="15" fill="rgb(244,192,49)" fg:x="6600" fg:w="346"/><text x="43.5486%" y="303.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (343 samples, 2.25%)</title><rect x="43.3182%" y="277" width="2.2502%" height="15" fill="rgb(226,211,11)" fg:x="6603" fg:w="343"/><text x="43.5682%" y="287.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (343 samples, 2.25%)</title><rect x="43.3182%" y="261" width="2.2502%" height="15" fill="rgb(236,162,54)" fg:x="6603" fg:w="343"/><text x="43.5682%" y="271.50">a..</text></g><g><title>alloc::alloc::alloc (343 samples, 2.25%)</title><rect x="43.3182%" y="245" width="2.2502%" height="15" fill="rgb(220,229,9)" fg:x="6603" fg:w="343"/><text x="43.5682%" y="255.50">a..</text></g><g><title>malloc (312 samples, 2.05%)</title><rect x="43.5216%" y="229" width="2.0468%" height="15" fill="rgb(250,87,22)" fg:x="6634" fg:w="312"/><text x="43.7716%" y="239.50">m..</text></g><g><title>[libc.so.6] (252 samples, 1.65%)</title><rect x="43.9152%" y="213" width="1.6532%" height="15" fill="rgb(239,43,17)" fg:x="6694" fg:w="252"/><text x="44.1652%" y="223.50"></text></g><g><title>[libc.so.6] (28 samples, 0.18%)</title><rect x="45.3848%" y="197" width="0.1837%" height="15" fill="rgb(231,177,25)" fg:x="6918" fg:w="28"/><text x="45.6348%" y="207.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (114 samples, 0.75%)</title><rect x="51.4794%" y="341" width="0.7479%" height="15" fill="rgb(219,179,1)" fg:x="7847" fg:w="114"/><text x="51.7294%" y="351.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (114 samples, 0.75%)</title><rect x="51.4794%" y="325" width="0.7479%" height="15" fill="rgb(238,219,53)" fg:x="7847" fg:w="114"/><text x="51.7294%" y="335.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.75%)</title><rect x="51.4794%" y="309" width="0.7479%" height="15" fill="rgb(232,167,36)" fg:x="7847" fg:w="114"/><text x="51.7294%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.75%)</title><rect x="51.4794%" y="293" width="0.7479%" height="15" fill="rgb(244,19,51)" fg:x="7847" fg:w="114"/><text x="51.7294%" y="303.50"></text></g><g><title>core::str::validations::next_code_point (114 samples, 0.75%)</title><rect x="51.4794%" y="277" width="0.7479%" height="15" fill="rgb(224,6,22)" fg:x="7847" fg:w="114"/><text x="51.7294%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.36%)</title><rect x="51.8664%" y="261" width="0.3608%" height="15" fill="rgb(224,145,5)" fg:x="7906" fg:w="55"/><text x="52.1164%" y="271.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (132 samples, 0.87%)</title><rect x="60.7820%" y="309" width="0.8660%" height="15" fill="rgb(234,130,49)" fg:x="9265" fg:w="132"/><text x="61.0320%" y="319.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (75 samples, 0.49%)</title><rect x="61.6480%" y="309" width="0.4920%" height="15" fill="rgb(254,6,2)" fg:x="9397" fg:w="75"/><text x="61.8980%" y="319.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (55 samples, 0.36%)</title><rect x="62.1400%" y="309" width="0.3608%" height="15" fill="rgb(208,96,46)" fg:x="9472" fg:w="55"/><text x="62.3900%" y="319.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (1,219 samples, 8.00%)</title><rect x="54.5103%" y="325" width="7.9971%" height="15" fill="rgb(239,3,39)" fg:x="8309" fg:w="1219"/><text x="54.7603%" y="335.50">&lt;nom_locate..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (1,568 samples, 10.29%)</title><rect x="52.2273%" y="341" width="10.2867%" height="15" fill="rgb(233,210,1)" fg:x="7961" fg:w="1568"/><text x="52.4773%" y="351.50">&lt;nom_locate::Lo..</text></g><g><title>hl7_parser::parser::component_parser::{{closure}} (6,149 samples, 40.34%)</title><rect x="22.1807%" y="389" width="40.3398%" height="15" fill="rgb(244,137,37)" fg:x="3381" fg:w="6149"/><text x="22.4307%" y="399.50">hl7_parser::parser::component_parser::{{closure}}</text></g><g><title>nom_locate::position (2,584 samples, 16.95%)</title><rect x="45.5685%" y="373" width="16.9520%" height="15" fill="rgb(240,136,2)" fg:x="6946" fg:w="2584"/><text x="45.8185%" y="383.50">nom_locate::position</text></g><g><title>nom::bytes::complete::take::{{closure}} (2,286 samples, 15.00%)</title><rect x="47.5235%" y="357" width="14.9970%" height="15" fill="rgb(239,18,37)" fg:x="7244" fg:w="2286"/><text x="47.7735%" y="367.50">nom::bytes::complete::t..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="62.5730%" y="373" width="0.0328%" height="15" fill="rgb(218,185,22)" fg:x="9538" fg:w="5"/><text x="62.8230%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.03%)</title><rect x="62.5730%" y="357" width="0.0328%" height="15" fill="rgb(225,218,4)" fg:x="9538" fg:w="5"/><text x="62.8230%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="62.5730%" y="341" width="0.0328%" height="15" fill="rgb(230,182,32)" fg:x="9538" fg:w="5"/><text x="62.8230%" y="351.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (3 samples, 0.02%)</title><rect x="62.6583%" y="357" width="0.0197%" height="15" fill="rgb(242,56,43)" fg:x="9551" fg:w="3"/><text x="62.9083%" y="367.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (4 samples, 0.03%)</title><rect x="62.6780%" y="357" width="0.0262%" height="15" fill="rgb(233,99,24)" fg:x="9554" fg:w="4"/><text x="62.9280%" y="367.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (10 samples, 0.07%)</title><rect x="62.7042%" y="357" width="0.0656%" height="15" fill="rgb(234,209,42)" fg:x="9558" fg:w="10"/><text x="62.9542%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (5 samples, 0.03%)</title><rect x="62.7698%" y="261" width="0.0328%" height="15" fill="rgb(227,7,12)" fg:x="9568" fg:w="5"/><text x="63.0198%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.03%)</title><rect x="62.7698%" y="245" width="0.0328%" height="15" fill="rgb(245,203,43)" fg:x="9568" fg:w="5"/><text x="63.0198%" y="255.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (35 samples, 0.23%)</title><rect x="62.6058%" y="373" width="0.2296%" height="15" fill="rgb(238,205,33)" fg:x="9543" fg:w="35"/><text x="62.8558%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (10 samples, 0.07%)</title><rect x="62.7698%" y="357" width="0.0656%" height="15" fill="rgb(231,56,7)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.07%)</title><rect x="62.7698%" y="341" width="0.0656%" height="15" fill="rgb(244,186,29)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="351.50"></text></g><g><title>&lt;memchr::memchr::iter::Memchr as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="62.7698%" y="325" width="0.0656%" height="15" fill="rgb(234,111,31)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="335.50"></text></g><g><title>memchr::memchr::memchr (10 samples, 0.07%)</title><rect x="62.7698%" y="309" width="0.0656%" height="15" fill="rgb(241,149,10)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="319.50"></text></g><g><title>memchr::memchr::memchr::imp (10 samples, 0.07%)</title><rect x="62.7698%" y="293" width="0.0656%" height="15" fill="rgb(249,206,44)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="303.50"></text></g><g><title>memchr::memchr::x86::memchr (10 samples, 0.07%)</title><rect x="62.7698%" y="277" width="0.0656%" height="15" fill="rgb(251,153,30)" fg:x="9568" fg:w="10"/><text x="63.0198%" y="287.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (5 samples, 0.03%)</title><rect x="62.8026%" y="261" width="0.0328%" height="15" fill="rgb(239,152,38)" fg:x="9573" fg:w="5"/><text x="63.0526%" y="271.50"></text></g><g><title>memchr::memchr::x86::sse2::memchr (5 samples, 0.03%)</title><rect x="62.8026%" y="245" width="0.0328%" height="15" fill="rgb(249,139,47)" fg:x="9573" fg:w="5"/><text x="63.0526%" y="255.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6,261 samples, 41.07%)</title><rect x="21.8461%" y="405" width="41.0746%" height="15" fill="rgb(244,64,35)" fg:x="3330" fg:w="6261"/><text x="22.0961%" y="415.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (61 samples, 0.40%)</title><rect x="62.5205%" y="389" width="0.4002%" height="15" fill="rgb(216,46,15)" fg:x="9530" fg:w="61"/><text x="62.7705%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.09%)</title><rect x="62.8354%" y="373" width="0.0853%" height="15" fill="rgb(250,74,19)" fg:x="9578" fg:w="13"/><text x="63.0854%" y="383.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as core::clone::Clone&gt;::clone (24 samples, 0.16%)</title><rect x="62.9207%" y="405" width="0.1574%" height="15" fill="rgb(249,42,33)" fg:x="9591" fg:w="24"/><text x="63.1707%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.08%)</title><rect x="63.1044%" y="389" width="0.0787%" height="15" fill="rgb(242,149,17)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.08%)</title><rect x="63.1044%" y="373" width="0.0787%" height="15" fill="rgb(244,29,21)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.08%)</title><rect x="63.1044%" y="357" width="0.0787%" height="15" fill="rgb(220,130,37)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.08%)</title><rect x="63.1044%" y="341" width="0.0787%" height="15" fill="rgb(211,67,2)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.08%)</title><rect x="63.1044%" y="325" width="0.0787%" height="15" fill="rgb(235,68,52)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="335.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.08%)</title><rect x="63.1044%" y="309" width="0.0787%" height="15" fill="rgb(246,142,3)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="319.50"></text></g><g><title>realloc (12 samples, 0.08%)</title><rect x="63.1044%" y="293" width="0.0787%" height="15" fill="rgb(241,25,7)" fg:x="9619" fg:w="12"/><text x="63.3544%" y="303.50"></text></g><g><title>[libc.so.6] (11 samples, 0.07%)</title><rect x="63.1109%" y="277" width="0.0722%" height="15" fill="rgb(242,119,39)" fg:x="9620" fg:w="11"/><text x="63.3609%" y="287.50"></text></g><g><title>[libc.so.6] (10 samples, 0.07%)</title><rect x="63.1175%" y="261" width="0.0656%" height="15" fill="rgb(241,98,45)" fg:x="9621" fg:w="10"/><text x="63.3675%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="63.1700%" y="245" width="0.0131%" height="15" fill="rgb(254,28,30)" fg:x="9629" fg:w="2"/><text x="63.4200%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (62 samples, 0.41%)</title><rect x="63.0781%" y="405" width="0.4067%" height="15" fill="rgb(241,142,54)" fg:x="9615" fg:w="62"/><text x="63.3281%" y="415.50"></text></g><g><title>core::ptr::write (45 samples, 0.30%)</title><rect x="63.1897%" y="389" width="0.2952%" height="15" fill="rgb(222,85,15)" fg:x="9632" fg:w="45"/><text x="63.4397%" y="399.50"></text></g><g><title>__rdl_alloc (8 samples, 0.05%)</title><rect x="63.5374%" y="293" width="0.0525%" height="15" fill="rgb(210,85,47)" fg:x="9685" fg:w="8"/><text x="63.7874%" y="303.50"></text></g><g><title>__rust_alloc (21 samples, 0.14%)</title><rect x="63.5898%" y="293" width="0.1378%" height="15" fill="rgb(224,206,25)" fg:x="9693" fg:w="21"/><text x="63.8398%" y="303.50"></text></g><g><title>[libc.so.6] (37 samples, 0.24%)</title><rect x="66.0303%" y="261" width="0.2427%" height="15" fill="rgb(243,201,19)" fg:x="10065" fg:w="37"/><text x="66.2803%" y="271.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="66.2730%" y="261" width="0.0131%" height="15" fill="rgb(236,59,4)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="271.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="66.2730%" y="245" width="0.0131%" height="15" fill="rgb(254,179,45)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="255.50"></text></g><g><title>handle_edge_irq (2 samples, 0.01%)</title><rect x="66.2730%" y="229" width="0.0131%" height="15" fill="rgb(226,14,10)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="239.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="66.2730%" y="213" width="0.0131%" height="15" fill="rgb(244,27,41)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="66.2730%" y="197" width="0.0131%" height="15" fill="rgb(235,35,32)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="207.50"></text></g><g><title>rtl8168_interrupt (2 samples, 0.01%)</title><rect x="66.2730%" y="181" width="0.0131%" height="15" fill="rgb(218,68,31)" fg:x="10102" fg:w="2"/><text x="66.5230%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (433 samples, 2.84%)</title><rect x="63.4849%" y="405" width="2.8406%" height="15" fill="rgb(207,120,37)" fg:x="9677" fg:w="433"/><text x="63.7349%" y="415.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (433 samples, 2.84%)</title><rect x="63.4849%" y="389" width="2.8406%" height="15" fill="rgb(227,98,0)" fg:x="9677" fg:w="433"/><text x="63.7349%" y="399.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (427 samples, 2.80%)</title><rect x="63.5242%" y="373" width="2.8013%" height="15" fill="rgb(207,7,3)" fg:x="9683" fg:w="427"/><text x="63.7742%" y="383.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (427 samples, 2.80%)</title><rect x="63.5242%" y="357" width="2.8013%" height="15" fill="rgb(206,98,19)" fg:x="9683" fg:w="427"/><text x="63.7742%" y="367.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (426 samples, 2.79%)</title><rect x="63.5308%" y="341" width="2.7947%" height="15" fill="rgb(217,5,26)" fg:x="9684" fg:w="426"/><text x="63.7808%" y="351.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (426 samples, 2.79%)</title><rect x="63.5308%" y="325" width="2.7947%" height="15" fill="rgb(235,190,38)" fg:x="9684" fg:w="426"/><text x="63.7808%" y="335.50">al..</text></g><g><title>alloc::alloc::alloc (426 samples, 2.79%)</title><rect x="63.5308%" y="309" width="2.7947%" height="15" fill="rgb(247,86,24)" fg:x="9684" fg:w="426"/><text x="63.7808%" y="319.50">al..</text></g><g><title>malloc (396 samples, 2.60%)</title><rect x="63.7276%" y="293" width="2.5979%" height="15" fill="rgb(205,101,16)" fg:x="9714" fg:w="396"/><text x="63.9776%" y="303.50">ma..</text></g><g><title>[libc.so.6] (344 samples, 2.26%)</title><rect x="64.0688%" y="277" width="2.2568%" height="15" fill="rgb(246,168,33)" fg:x="9766" fg:w="344"/><text x="64.3188%" y="287.50">[..</text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.04%)</title><rect x="66.2862%" y="261" width="0.0394%" height="15" fill="rgb(231,114,1)" fg:x="10104" fg:w="6"/><text x="66.5362%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.04%)</title><rect x="66.2862%" y="245" width="0.0394%" height="15" fill="rgb(207,184,53)" fg:x="10104" fg:w="6"/><text x="66.5362%" y="255.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.04%)</title><rect x="66.2862%" y="229" width="0.0394%" height="15" fill="rgb(224,95,51)" fg:x="10104" fg:w="6"/><text x="66.5362%" y="239.50"></text></g><g><title>__rseq_handle_notify_resume (6 samples, 0.04%)</title><rect x="66.2862%" y="213" width="0.0394%" height="15" fill="rgb(212,188,45)" fg:x="10104" fg:w="6"/><text x="66.5362%" y="223.50"></text></g><g><title>__get_user_8 (6 samples, 0.04%)</title><rect x="66.2862%" y="197" width="0.0394%" height="15" fill="rgb(223,154,38)" fg:x="10104" fg:w="6"/><text x="66.5362%" y="207.50"></text></g><g><title>hl7_parser::parser::components_parser::{{closure}} (7,139 samples, 46.83%)</title><rect x="19.4975%" y="437" width="46.8346%" height="15" fill="rgb(251,22,52)" fg:x="2972" fg:w="7139"/><text x="19.7475%" y="447.50">hl7_parser::parser::components_parser::{{closure}}</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (7,130 samples, 46.78%)</title><rect x="19.5565%" y="421" width="46.7756%" height="15" fill="rgb(229,209,22)" fg:x="2981" fg:w="7130"/><text x="19.8065%" y="431.50">hl7_parser::parser::separated_list0_cap::{{closure}}</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (86 samples, 0.56%)</title><rect x="71.3573%" y="405" width="0.5642%" height="15" fill="rgb(234,138,34)" fg:x="10877" fg:w="86"/><text x="71.6073%" y="415.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (86 samples, 0.56%)</title><rect x="71.3573%" y="389" width="0.5642%" height="15" fill="rgb(212,95,11)" fg:x="10877" fg:w="86"/><text x="71.6073%" y="399.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.56%)</title><rect x="71.3573%" y="373" width="0.5642%" height="15" fill="rgb(240,179,47)" fg:x="10877" fg:w="86"/><text x="71.6073%" y="383.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.56%)</title><rect x="71.3573%" y="357" width="0.5642%" height="15" fill="rgb(240,163,11)" fg:x="10877" fg:w="86"/><text x="71.6073%" y="367.50"></text></g><g><title>core::str::validations::next_code_point (86 samples, 0.56%)</title><rect x="71.3573%" y="341" width="0.5642%" height="15" fill="rgb(236,37,12)" fg:x="10877" fg:w="86"/><text x="71.6073%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.31%)</title><rect x="71.6066%" y="325" width="0.3149%" height="15" fill="rgb(232,164,16)" fg:x="10915" fg:w="48"/><text x="71.8566%" y="335.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (86 samples, 0.56%)</title><rect x="78.5147%" y="373" width="0.5642%" height="15" fill="rgb(244,205,15)" fg:x="11968" fg:w="86"/><text x="78.7647%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (73 samples, 0.48%)</title><rect x="79.0789%" y="373" width="0.4789%" height="15" fill="rgb(223,117,47)" fg:x="12054" fg:w="73"/><text x="79.3289%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (38 samples, 0.25%)</title><rect x="79.5578%" y="373" width="0.2493%" height="15" fill="rgb(244,107,35)" fg:x="12127" fg:w="38"/><text x="79.8078%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="79.8137%" y="341" width="0.0131%" height="15" fill="rgb(205,140,8)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="351.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="79.8137%" y="325" width="0.0131%" height="15" fill="rgb(228,84,46)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="335.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="79.8137%" y="309" width="0.0131%" height="15" fill="rgb(254,188,9)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="319.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="79.8137%" y="293" width="0.0131%" height="15" fill="rgb(206,112,54)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="303.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="79.8137%" y="277" width="0.0131%" height="15" fill="rgb(216,84,49)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="287.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="79.8137%" y="261" width="0.0131%" height="15" fill="rgb(214,194,35)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="271.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="79.8137%" y="245" width="0.0131%" height="15" fill="rgb(249,28,3)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="255.50"></text></g><g><title>perf_event_task_tick (2 samples, 0.01%)</title><rect x="79.8137%" y="229" width="0.0131%" height="15" fill="rgb(222,56,52)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="239.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="79.8137%" y="213" width="0.0131%" height="15" fill="rgb(245,217,50)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="223.50"></text></g><g><title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="79.8137%" y="197" width="0.0131%" height="15" fill="rgb(213,201,24)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="207.50"></text></g><g><title>delay_halt (2 samples, 0.01%)</title><rect x="79.8137%" y="181" width="0.0131%" height="15" fill="rgb(248,116,28)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="191.50"></text></g><g><title>delay_halt_mwaitx (2 samples, 0.01%)</title><rect x="79.8137%" y="165" width="0.0131%" height="15" fill="rgb(219,72,43)" fg:x="12166" fg:w="2"/><text x="80.0637%" y="175.50"></text></g><g><title>hl7_parser::parser::repeat_parser::{{closure}} (9,313 samples, 61.10%)</title><rect x="18.7365%" y="453" width="61.0969%" height="15" fill="rgb(209,138,14)" fg:x="2856" fg:w="9313"/><text x="18.9865%" y="463.50">hl7_parser::parser::repeat_parser::{{closure}}</text></g><g><title>nom_locate::position (2,058 samples, 13.50%)</title><rect x="66.3321%" y="437" width="13.5013%" height="15" fill="rgb(222,18,33)" fg:x="10111" fg:w="2058"/><text x="66.5821%" y="447.50">nom_locate::position</text></g><g><title>nom::bytes::complete::take::{{closure}} (1,782 samples, 11.69%)</title><rect x="68.1428%" y="421" width="11.6906%" height="15" fill="rgb(213,199,7)" fg:x="10387" fg:w="1782"/><text x="68.3928%" y="431.50">nom::bytes::compl..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (1,206 samples, 7.91%)</title><rect x="71.9215%" y="405" width="7.9118%" height="15" fill="rgb(250,110,10)" fg:x="10963" fg:w="1206"/><text x="72.1715%" y="415.50">&lt;nom_locate..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (950 samples, 6.23%)</title><rect x="73.6010%" y="389" width="6.2324%" height="15" fill="rgb(248,123,6)" fg:x="11219" fg:w="950"/><text x="73.8510%" y="399.50">&lt;nom_loc..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="79.8137%" y="373" width="0.0197%" height="15" fill="rgb(206,91,31)" fg:x="12166" fg:w="3"/><text x="80.0637%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="79.8137%" y="357" width="0.0197%" height="15" fill="rgb(211,154,13)" fg:x="12166" fg:w="3"/><text x="80.0637%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,366 samples, 61.44%)</title><rect x="18.5265%" y="469" width="61.4446%" height="15" fill="rgb(225,148,7)" fg:x="2824" fg:w="9366"/><text x="18.7765%" y="479.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (21 samples, 0.14%)</title><rect x="79.8334%" y="453" width="0.1378%" height="15" fill="rgb(220,160,43)" fg:x="12169" fg:w="21"/><text x="80.0834%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.11%)</title><rect x="79.8596%" y="437" width="0.1115%" height="15" fill="rgb(213,52,39)" fg:x="12173" fg:w="17"/><text x="80.1096%" y="447.50"></text></g><g><title>core::str::validations::next_code_point (17 samples, 0.11%)</title><rect x="79.8596%" y="421" width="0.1115%" height="15" fill="rgb(243,137,7)" fg:x="12173" fg:w="17"/><text x="80.1096%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="79.9383%" y="405" width="0.0328%" height="15" fill="rgb(230,79,13)" fg:x="12185" fg:w="5"/><text x="80.1883%" y="415.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as core::clone::Clone&gt;::clone (18 samples, 0.12%)</title><rect x="79.9711%" y="469" width="0.1181%" height="15" fill="rgb(247,105,23)" fg:x="12190" fg:w="18"/><text x="80.2211%" y="479.50"></text></g><g><title>__rdl_alloc (7 samples, 0.05%)</title><rect x="80.1286%" y="357" width="0.0459%" height="15" fill="rgb(223,179,41)" fg:x="12214" fg:w="7"/><text x="80.3786%" y="367.50"></text></g><g><title>__rust_alloc (18 samples, 0.12%)</title><rect x="80.1745%" y="357" width="0.1181%" height="15" fill="rgb(218,9,34)" fg:x="12221" fg:w="18"/><text x="80.4245%" y="367.50"></text></g><g><title>[libc.so.6] (25 samples, 0.16%)</title><rect x="82.1164%" y="325" width="0.1640%" height="15" fill="rgb(222,106,8)" fg:x="12517" fg:w="25"/><text x="82.3664%" y="335.50"></text></g><g><title>hl7_parser::parser::repeats_parser::{{closure}} (9,804 samples, 64.32%)</title><rect x="17.9755%" y="501" width="64.3180%" height="15" fill="rgb(211,220,0)" fg:x="2740" fg:w="9804"/><text x="18.2255%" y="511.50">hl7_parser::parser::repeats_parser::{{closure}}</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (9,792 samples, 64.24%)</title><rect x="18.0542%" y="485" width="64.2393%" height="15" fill="rgb(229,52,16)" fg:x="2752" fg:w="9792"/><text x="18.3042%" y="495.50">hl7_parser::parser::separated_list0_cap::{{closure}}</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (336 samples, 2.20%)</title><rect x="80.0892%" y="469" width="2.2043%" height="15" fill="rgb(212,155,18)" fg:x="12208" fg:w="336"/><text x="80.3392%" y="479.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (336 samples, 2.20%)</title><rect x="80.0892%" y="453" width="2.2043%" height="15" fill="rgb(242,21,14)" fg:x="12208" fg:w="336"/><text x="80.3392%" y="463.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (331 samples, 2.17%)</title><rect x="80.1220%" y="437" width="2.1715%" height="15" fill="rgb(222,19,48)" fg:x="12213" fg:w="331"/><text x="80.3720%" y="447.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (331 samples, 2.17%)</title><rect x="80.1220%" y="421" width="2.1715%" height="15" fill="rgb(232,45,27)" fg:x="12213" fg:w="331"/><text x="80.3720%" y="431.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (331 samples, 2.17%)</title><rect x="80.1220%" y="405" width="2.1715%" height="15" fill="rgb(249,103,42)" fg:x="12213" fg:w="331"/><text x="80.3720%" y="415.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (331 samples, 2.17%)</title><rect x="80.1220%" y="389" width="2.1715%" height="15" fill="rgb(246,81,33)" fg:x="12213" fg:w="331"/><text x="80.3720%" y="399.50">a..</text></g><g><title>alloc::alloc::alloc (331 samples, 2.17%)</title><rect x="80.1220%" y="373" width="2.1715%" height="15" fill="rgb(252,33,42)" fg:x="12213" fg:w="331"/><text x="80.3720%" y="383.50">a..</text></g><g><title>malloc (305 samples, 2.00%)</title><rect x="80.2926%" y="357" width="2.0009%" height="15" fill="rgb(209,212,41)" fg:x="12239" fg:w="305"/><text x="80.5426%" y="367.50">m..</text></g><g><title>[libc.so.6] (233 samples, 1.53%)</title><rect x="80.7649%" y="341" width="1.5286%" height="15" fill="rgb(207,154,6)" fg:x="12311" fg:w="233"/><text x="81.0149%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="82.2804%" y="325" width="0.0131%" height="15" fill="rgb(223,64,47)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="82.2804%" y="309" width="0.0131%" height="15" fill="rgb(211,161,38)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="82.2804%" y="293" width="0.0131%" height="15" fill="rgb(219,138,40)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="303.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="82.2804%" y="277" width="0.0131%" height="15" fill="rgb(241,228,46)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="287.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="82.2804%" y="261" width="0.0131%" height="15" fill="rgb(223,209,38)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="271.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="82.2804%" y="245" width="0.0131%" height="15" fill="rgb(236,164,45)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="255.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="82.2804%" y="229" width="0.0131%" height="15" fill="rgb(231,15,5)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="239.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="82.2804%" y="213" width="0.0131%" height="15" fill="rgb(252,35,15)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="223.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="82.2804%" y="197" width="0.0131%" height="15" fill="rgb(248,181,18)" fg:x="12542" fg:w="2"/><text x="82.5304%" y="207.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (105 samples, 0.69%)</title><rect x="85.9083%" y="469" width="0.6888%" height="15" fill="rgb(233,39,42)" fg:x="13095" fg:w="105"/><text x="86.1583%" y="479.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (105 samples, 0.69%)</title><rect x="85.9083%" y="453" width="0.6888%" height="15" fill="rgb(238,110,33)" fg:x="13095" fg:w="105"/><text x="86.1583%" y="463.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.69%)</title><rect x="85.9083%" y="437" width="0.6888%" height="15" fill="rgb(233,195,10)" fg:x="13095" fg:w="105"/><text x="86.1583%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.69%)</title><rect x="85.9083%" y="421" width="0.6888%" height="15" fill="rgb(254,105,3)" fg:x="13095" fg:w="105"/><text x="86.1583%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (105 samples, 0.69%)</title><rect x="85.9083%" y="405" width="0.6888%" height="15" fill="rgb(221,225,9)" fg:x="13095" fg:w="105"/><text x="86.1583%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.35%)</title><rect x="86.2494%" y="389" width="0.3477%" height="15" fill="rgb(224,227,45)" fg:x="13147" fg:w="53"/><text x="86.4994%" y="399.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (81 samples, 0.53%)</title><rect x="93.8660%" y="437" width="0.5314%" height="15" fill="rgb(229,198,43)" fg:x="14308" fg:w="81"/><text x="94.1160%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.04%)</title><rect x="94.3581%" y="421" width="0.0394%" height="15" fill="rgb(206,209,35)" fg:x="14383" fg:w="6"/><text x="94.6081%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.04%)</title><rect x="94.3581%" y="405" width="0.0394%" height="15" fill="rgb(245,195,53)" fg:x="14383" fg:w="6"/><text x="94.6081%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.04%)</title><rect x="94.3581%" y="389" width="0.0394%" height="15" fill="rgb(240,92,26)" fg:x="14383" fg:w="6"/><text x="94.6081%" y="399.50"></text></g><g><title>switch_fpu_return (6 samples, 0.04%)</title><rect x="94.3581%" y="373" width="0.0394%" height="15" fill="rgb(207,40,23)" fg:x="14383" fg:w="6"/><text x="94.6081%" y="383.50"></text></g><g><title>copy_kernel_to_fpregs (6 samples, 0.04%)</title><rect x="94.3581%" y="357" width="0.0394%" height="15" fill="rgb(223,111,35)" fg:x="14383" fg:w="6"/><text x="94.6081%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (12 samples, 0.08%)</title><rect x="94.7451%" y="373" width="0.0787%" height="15" fill="rgb(229,147,28)" fg:x="14442" fg:w="12"/><text x="94.9951%" y="383.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (66 samples, 0.43%)</title><rect x="94.3974%" y="437" width="0.4330%" height="15" fill="rgb(211,29,28)" fg:x="14389" fg:w="66"/><text x="94.6474%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (13 samples, 0.09%)</title><rect x="94.7451%" y="421" width="0.0853%" height="15" fill="rgb(228,72,33)" fg:x="14442" fg:w="13"/><text x="94.9951%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (13 samples, 0.09%)</title><rect x="94.7451%" y="405" width="0.0853%" height="15" fill="rgb(205,214,31)" fg:x="14442" fg:w="13"/><text x="94.9951%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (13 samples, 0.09%)</title><rect x="94.7451%" y="389" width="0.0853%" height="15" fill="rgb(224,111,15)" fg:x="14442" fg:w="13"/><text x="94.9951%" y="399.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (952 samples, 6.25%)</title><rect x="88.8408%" y="453" width="6.2455%" height="15" fill="rgb(253,21,26)" fg:x="13542" fg:w="952"/><text x="89.0908%" y="463.50">&lt;nom_loc..</text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (39 samples, 0.26%)</title><rect x="94.8304%" y="437" width="0.2559%" height="15" fill="rgb(245,139,43)" fg:x="14455" fg:w="39"/><text x="95.0804%" y="447.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (1,296 samples, 8.50%)</title><rect x="86.5971%" y="469" width="8.5023%" height="15" fill="rgb(252,170,7)" fg:x="13200" fg:w="1296"/><text x="86.8471%" y="479.50">&lt;nom_locate:..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="95.0994%" y="469" width="0.0131%" height="15" fill="rgb(231,118,14)" fg:x="14496" fg:w="2"/><text x="95.3494%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="95.0994%" y="453" width="0.0131%" height="15" fill="rgb(238,83,0)" fg:x="14496" fg:w="2"/><text x="95.3494%" y="463.50"></text></g><g><title>hl7_parser::parser::field_parser::{{closure}} (11,862 samples, 77.82%)</title><rect x="17.2997%" y="517" width="77.8193%" height="15" fill="rgb(221,39,39)" fg:x="2637" fg:w="11862"/><text x="17.5497%" y="527.50">hl7_parser::parser::field_parser::{{closure}}</text></g><g><title>nom_locate::position (1,955 samples, 12.83%)</title><rect x="82.2935%" y="501" width="12.8256%" height="15" fill="rgb(222,119,46)" fg:x="12544" fg:w="1955"/><text x="82.5435%" y="511.50">nom_locate::position</text></g><g><title>nom::bytes::complete::take::{{closure}} (1,716 samples, 11.26%)</title><rect x="83.8614%" y="485" width="11.2576%" height="15" fill="rgb(222,165,49)" fg:x="12783" fg:w="1716"/><text x="84.1114%" y="495.50">nom::bytes::compl..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="95.2306%" y="501" width="0.0525%" height="15" fill="rgb(219,113,52)" fg:x="14516" fg:w="8"/><text x="95.4806%" y="511.50"></text></g><g><title>core::str::validations::next_code_point (8 samples, 0.05%)</title><rect x="95.2306%" y="485" width="0.0525%" height="15" fill="rgb(214,7,15)" fg:x="14516" fg:w="8"/><text x="95.4806%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="95.2372%" y="469" width="0.0459%" height="15" fill="rgb(235,32,4)" fg:x="14517" fg:w="7"/><text x="95.4872%" y="479.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (27 samples, 0.18%)</title><rect x="95.4602%" y="485" width="0.1771%" height="15" fill="rgb(238,90,54)" fg:x="14551" fg:w="27"/><text x="95.7102%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (33 samples, 0.22%)</title><rect x="95.6373%" y="485" width="0.2165%" height="15" fill="rgb(213,208,19)" fg:x="14578" fg:w="33"/><text x="95.8873%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.01%)</title><rect x="95.8407%" y="469" width="0.0131%" height="15" fill="rgb(233,156,4)" fg:x="14609" fg:w="2"/><text x="96.0907%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.01%)</title><rect x="95.8407%" y="453" width="0.0131%" height="15" fill="rgb(207,194,5)" fg:x="14609" fg:w="2"/><text x="96.0907%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.01%)</title><rect x="95.8407%" y="437" width="0.0131%" height="15" fill="rgb(206,111,30)" fg:x="14609" fg:w="2"/><text x="96.0907%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="95.8407%" y="421" width="0.0131%" height="15" fill="rgb(243,70,54)" fg:x="14609" fg:w="2"/><text x="96.0907%" y="431.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (45 samples, 0.30%)</title><rect x="95.8538%" y="485" width="0.2952%" height="15" fill="rgb(242,28,8)" fg:x="14611" fg:w="45"/><text x="96.1038%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (7 samples, 0.05%)</title><rect x="96.1556%" y="389" width="0.0459%" height="15" fill="rgb(219,106,18)" fg:x="14657" fg:w="7"/><text x="96.4056%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.05%)</title><rect x="96.1556%" y="373" width="0.0459%" height="15" fill="rgb(244,222,10)" fg:x="14657" fg:w="7"/><text x="96.4056%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (12,071 samples, 79.19%)</title><rect x="17.1751%" y="533" width="79.1904%" height="15" fill="rgb(236,179,52)" fg:x="2618" fg:w="12071"/><text x="17.4251%" y="543.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (190 samples, 1.25%)</title><rect x="95.1191%" y="517" width="1.2465%" height="15" fill="rgb(213,23,39)" fg:x="14499" fg:w="190"/><text x="95.3691%" y="527.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (165 samples, 1.08%)</title><rect x="95.2831%" y="501" width="1.0825%" height="15" fill="rgb(238,48,10)" fg:x="14524" fg:w="165"/><text x="95.5331%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (33 samples, 0.22%)</title><rect x="96.1491%" y="485" width="0.2165%" height="15" fill="rgb(251,196,23)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.22%)</title><rect x="96.1491%" y="469" width="0.2165%" height="15" fill="rgb(250,152,24)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="479.50"></text></g><g><title>&lt;memchr::memchr::iter::Memchr as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.22%)</title><rect x="96.1491%" y="453" width="0.2165%" height="15" fill="rgb(209,150,17)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="463.50"></text></g><g><title>memchr::memchr::memchr (33 samples, 0.22%)</title><rect x="96.1491%" y="437" width="0.2165%" height="15" fill="rgb(234,202,34)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="447.50"></text></g><g><title>memchr::memchr::memchr::imp (33 samples, 0.22%)</title><rect x="96.1491%" y="421" width="0.2165%" height="15" fill="rgb(253,148,53)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="431.50"></text></g><g><title>memchr::memchr::x86::memchr (33 samples, 0.22%)</title><rect x="96.1491%" y="405" width="0.2165%" height="15" fill="rgb(218,129,16)" fg:x="14656" fg:w="33"/><text x="96.3991%" y="415.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (25 samples, 0.16%)</title><rect x="96.2015%" y="389" width="0.1640%" height="15" fill="rgb(216,85,19)" fg:x="14664" fg:w="25"/><text x="96.4515%" y="399.50"></text></g><g><title>memchr::memchr::x86::sse2::memchr (20 samples, 0.13%)</title><rect x="96.2343%" y="373" width="0.1312%" height="15" fill="rgb(235,228,7)" fg:x="14669" fg:w="20"/><text x="96.4843%" y="383.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as core::clone::Clone&gt;::clone (24 samples, 0.16%)</title><rect x="96.3655%" y="533" width="0.1574%" height="15" fill="rgb(245,175,0)" fg:x="14689" fg:w="24"/><text x="96.6155%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="96.7526%" y="485" width="0.0131%" height="15" fill="rgb(208,168,36)" fg:x="14748" fg:w="2"/><text x="97.0026%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (4 samples, 0.03%)</title><rect x="96.7657%" y="485" width="0.0262%" height="15" fill="rgb(246,171,24)" fg:x="14750" fg:w="4"/><text x="97.0157%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (278 samples, 1.82%)</title><rect x="96.8117%" y="469" width="1.8238%" height="15" fill="rgb(215,142,24)" fg:x="14757" fg:w="278"/><text x="97.0617%" y="479.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (278 samples, 1.82%)</title><rect x="96.8117%" y="453" width="1.8238%" height="15" fill="rgb(250,187,7)" fg:x="14757" fg:w="278"/><text x="97.0617%" y="463.50">a..</text></g><g><title>alloc::alloc::realloc (278 samples, 1.82%)</title><rect x="96.8117%" y="437" width="1.8238%" height="15" fill="rgb(228,66,33)" fg:x="14757" fg:w="278"/><text x="97.0617%" y="447.50">a..</text></g><g><title>realloc (278 samples, 1.82%)</title><rect x="96.8117%" y="421" width="1.8238%" height="15" fill="rgb(234,215,21)" fg:x="14757" fg:w="278"/><text x="97.0617%" y="431.50">r..</text></g><g><title>[libc.so.6] (275 samples, 1.80%)</title><rect x="96.8313%" y="405" width="1.8041%" height="15" fill="rgb(222,191,20)" fg:x="14760" fg:w="275"/><text x="97.0813%" y="415.50">[..</text></g><g><title>[libc.so.6] (268 samples, 1.76%)</title><rect x="96.8773%" y="389" width="1.7582%" height="15" fill="rgb(245,79,54)" fg:x="14767" fg:w="268"/><text x="97.1273%" y="399.50"></text></g><g><title>[libc.so.6] (192 samples, 1.26%)</title><rect x="97.3758%" y="373" width="1.2596%" height="15" fill="rgb(240,10,37)" fg:x="14843" fg:w="192"/><text x="97.6258%" y="383.50"></text></g><g><title>[libc.so.6] (76 samples, 0.50%)</title><rect x="98.1368%" y="357" width="0.4986%" height="15" fill="rgb(214,192,32)" fg:x="14959" fg:w="76"/><text x="98.3868%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (293 samples, 1.92%)</title><rect x="96.7395%" y="517" width="1.9222%" height="15" fill="rgb(209,36,54)" fg:x="14746" fg:w="293"/><text x="96.9895%" y="527.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (292 samples, 1.92%)</title><rect x="96.7460%" y="501" width="1.9156%" height="15" fill="rgb(220,10,11)" fg:x="14747" fg:w="292"/><text x="96.9960%" y="511.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (285 samples, 1.87%)</title><rect x="96.7920%" y="485" width="1.8697%" height="15" fill="rgb(221,106,17)" fg:x="14754" fg:w="285"/><text x="97.0420%" y="495.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.03%)</title><rect x="98.6354%" y="469" width="0.0262%" height="15" fill="rgb(251,142,44)" fg:x="15035" fg:w="4"/><text x="98.8854%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="98.6617%" y="517" width="0.0197%" height="15" fill="rgb(238,13,15)" fg:x="15039" fg:w="3"/><text x="98.9117%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="98.6617%" y="501" width="0.0197%" height="15" fill="rgb(208,107,27)" fg:x="15039" fg:w="3"/><text x="98.9117%" y="511.50"></text></g><g><title>hl7_parser::parser::fields_parser::{{closure}} (12,838 samples, 84.22%)</title><rect x="14.5575%" y="565" width="84.2223%" height="15" fill="rgb(205,136,37)" fg:x="2219" fg:w="12838"/><text x="14.8075%" y="575.50">hl7_parser::parser::fields_parser::{{closure}}</text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (12,837 samples, 84.22%)</title><rect x="14.5641%" y="549" width="84.2157%" height="15" fill="rgb(250,205,27)" fg:x="2220" fg:w="12837"/><text x="14.8141%" y="559.50">hl7_parser::parser::separated_list0_cap::{{closure}}</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (344 samples, 2.26%)</title><rect x="96.5230%" y="533" width="2.2568%" height="15" fill="rgb(210,80,43)" fg:x="14713" fg:w="344"/><text x="96.7730%" y="543.50">a..</text></g><g><title>core::ptr::write (15 samples, 0.10%)</title><rect x="98.6814%" y="517" width="0.0984%" height="15" fill="rgb(247,160,36)" fg:x="15042" fg:w="15"/><text x="98.9314%" y="527.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (3 samples, 0.02%)</title><rect x="98.7929%" y="549" width="0.0197%" height="15" fill="rgb(234,13,49)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (3 samples, 0.02%)</title><rect x="98.7929%" y="533" width="0.0197%" height="15" fill="rgb(234,122,0)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="543.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.7929%" y="517" width="0.0197%" height="15" fill="rgb(207,146,38)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.7929%" y="501" width="0.0197%" height="15" fill="rgb(207,177,25)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="511.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="98.7929%" y="485" width="0.0197%" height="15" fill="rgb(211,178,42)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.7929%" y="469" width="0.0197%" height="15" fill="rgb(230,69,54)" fg:x="15059" fg:w="3"/><text x="99.0429%" y="479.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (17 samples, 0.11%)</title><rect x="98.7798%" y="565" width="0.1115%" height="15" fill="rgb(214,135,41)" fg:x="15057" fg:w="17"/><text x="99.0298%" y="575.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (12 samples, 0.08%)</title><rect x="98.8126%" y="549" width="0.0787%" height="15" fill="rgb(237,67,25)" fg:x="15062" fg:w="12"/><text x="99.0626%" y="559.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (8 samples, 0.05%)</title><rect x="98.8388%" y="533" width="0.0525%" height="15" fill="rgb(222,189,50)" fg:x="15066" fg:w="8"/><text x="99.0888%" y="543.50"></text></g><g><title>nom::character::complete::char::{{closure}} (9 samples, 0.06%)</title><rect x="98.8913%" y="565" width="0.0590%" height="15" fill="rgb(245,148,34)" fg:x="15074" fg:w="9"/><text x="99.1413%" y="575.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (9 samples, 0.06%)</title><rect x="98.8913%" y="549" width="0.0590%" height="15" fill="rgb(222,29,6)" fg:x="15074" fg:w="9"/><text x="99.1413%" y="559.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputIter&gt;::slice_index (3 samples, 0.02%)</title><rect x="99.0881%" y="533" width="0.0197%" height="15" fill="rgb(221,189,43)" fg:x="15104" fg:w="3"/><text x="99.3381%" y="543.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::slice_index (3 samples, 0.02%)</title><rect x="99.0881%" y="517" width="0.0197%" height="15" fill="rgb(207,36,27)" fg:x="15104" fg:w="3"/><text x="99.3381%" y="527.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="99.0881%" y="501" width="0.0197%" height="15" fill="rgb(217,90,24)" fg:x="15104" fg:w="3"/><text x="99.3381%" y="511.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="99.0881%" y="485" width="0.0197%" height="15" fill="rgb(224,66,35)" fg:x="15104" fg:w="3"/><text x="99.3381%" y="495.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="99.0881%" y="469" width="0.0197%" height="15" fill="rgb(221,13,50)" fg:x="15104" fg:w="3"/><text x="99.3381%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="99.0947%" y="453" width="0.0131%" height="15" fill="rgb(236,68,49)" fg:x="15105" fg:w="2"/><text x="99.3447%" y="463.50"></text></g><g><title>&lt;&amp;str as nom::traits::Offset&gt;::offset (3 samples, 0.02%)</title><rect x="99.2849%" y="501" width="0.0197%" height="15" fill="rgb(229,146,28)" fg:x="15134" fg:w="3"/><text x="99.5349%" y="511.50"></text></g><g><title>hl7_parser::parser::segment_parser::{{closure}} (12,939 samples, 84.88%)</title><rect x="14.4329%" y="581" width="84.8849%" height="15" fill="rgb(225,31,38)" fg:x="2200" fg:w="12939"/><text x="14.6829%" y="591.50">hl7_parser::parser::segment_parser::{{closure}}</text></g><g><title>nom_locate::position (56 samples, 0.37%)</title><rect x="98.9503%" y="565" width="0.3674%" height="15" fill="rgb(250,208,3)" fg:x="15083" fg:w="56"/><text x="99.2003%" y="575.50"></text></g><g><title>nom::bytes::complete::take::{{closure}} (48 samples, 0.31%)</title><rect x="99.0028%" y="549" width="0.3149%" height="15" fill="rgb(246,54,23)" fg:x="15091" fg:w="48"/><text x="99.2528%" y="559.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (32 samples, 0.21%)</title><rect x="99.1078%" y="533" width="0.2099%" height="15" fill="rgb(243,76,11)" fg:x="15107" fg:w="32"/><text x="99.3578%" y="543.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (22 samples, 0.14%)</title><rect x="99.1734%" y="517" width="0.1443%" height="15" fill="rgb(245,21,50)" fg:x="15117" fg:w="22"/><text x="99.4234%" y="527.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="99.3046%" y="501" width="0.0131%" height="15" fill="rgb(228,9,43)" fg:x="15137" fg:w="2"/><text x="99.5546%" y="511.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="99.3440%" y="565" width="0.0262%" height="15" fill="rgb(208,100,47)" fg:x="15143" fg:w="4"/><text x="99.5940%" y="575.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.03%)</title><rect x="99.3440%" y="549" width="0.0262%" height="15" fill="rgb(232,26,8)" fg:x="15143" fg:w="4"/><text x="99.5940%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="99.3505%" y="533" width="0.0197%" height="15" fill="rgb(216,166,38)" fg:x="15144" fg:w="3"/><text x="99.6005%" y="543.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (3 samples, 0.02%)</title><rect x="99.3964%" y="549" width="0.0197%" height="15" fill="rgb(251,202,51)" fg:x="15151" fg:w="3"/><text x="99.6464%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.01%)</title><rect x="99.4161%" y="549" width="0.0131%" height="15" fill="rgb(254,216,34)" fg:x="15154" fg:w="2"/><text x="99.6661%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (12,966 samples, 85.06%)</title><rect x="14.3738%" y="597" width="85.0620%" height="15" fill="rgb(251,32,27)" fg:x="2191" fg:w="12966"/><text x="14.6238%" y="607.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::character::complete::char::{{closure}} (18 samples, 0.12%)</title><rect x="99.3177%" y="581" width="0.1181%" height="15" fill="rgb(208,127,28)" fg:x="15139" fg:w="18"/><text x="99.5677%" y="591.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::Slice&lt;R&gt;&gt;::slice (10 samples, 0.07%)</title><rect x="99.3702%" y="565" width="0.0656%" height="15" fill="rgb(224,137,22)" fg:x="15147" fg:w="10"/><text x="99.6202%" y="575.50"></text></g><g><title>hl7_parser::parser::separated_list0_cap::{{closure}} (12,976 samples, 85.13%)</title><rect x="14.3148%" y="613" width="85.1276%" height="15" fill="rgb(254,70,32)" fg:x="2182" fg:w="12976"/><text x="14.5648%" y="623.50">hl7_parser::parser::separated_list0_cap::{{closure}}</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="99.4620%" y="469" width="0.0131%" height="15" fill="rgb(229,75,37)" fg:x="15161" fg:w="2"/><text x="99.7120%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="99.4620%" y="533" width="0.0262%" height="15" fill="rgb(252,64,23)" fg:x="15161" fg:w="4"/><text x="99.7120%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="99.4620%" y="517" width="0.0262%" height="15" fill="rgb(232,162,48)" fg:x="15161" fg:w="4"/><text x="99.7120%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="99.4620%" y="501" width="0.0262%" height="15" fill="rgb(246,160,12)" fg:x="15161" fg:w="4"/><text x="99.7120%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="99.4620%" y="485" width="0.0262%" height="15" fill="rgb(247,166,0)" fg:x="15161" fg:w="4"/><text x="99.7120%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="99.4752%" y="469" width="0.0131%" height="15" fill="rgb(249,219,21)" fg:x="15163" fg:w="2"/><text x="99.7252%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.4883%" y="453" width="0.0131%" height="15" fill="rgb(205,209,3)" fg:x="15165" fg:w="2"/><text x="99.7383%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="99.4883%" y="437" width="0.0131%" height="15" fill="rgb(243,44,1)" fg:x="15165" fg:w="2"/><text x="99.7383%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.07%)</title><rect x="99.4555%" y="565" width="0.0656%" height="15" fill="rgb(206,159,16)" fg:x="15160" fg:w="10"/><text x="99.7055%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.07%)</title><rect x="99.4555%" y="549" width="0.0656%" height="15" fill="rgb(244,77,30)" fg:x="15160" fg:w="10"/><text x="99.7055%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.03%)</title><rect x="99.4883%" y="533" width="0.0328%" height="15" fill="rgb(218,69,12)" fg:x="15165" fg:w="5"/><text x="99.7383%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.03%)</title><rect x="99.4883%" y="517" width="0.0328%" height="15" fill="rgb(212,87,7)" fg:x="15165" fg:w="5"/><text x="99.7383%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (5 samples, 0.03%)</title><rect x="99.4883%" y="501" width="0.0328%" height="15" fill="rgb(245,114,25)" fg:x="15165" fg:w="5"/><text x="99.7383%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (5 samples, 0.03%)</title><rect x="99.4883%" y="485" width="0.0328%" height="15" fill="rgb(210,61,42)" fg:x="15165" fg:w="5"/><text x="99.7383%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (5 samples, 0.03%)</title><rect x="99.4883%" y="469" width="0.0328%" height="15" fill="rgb(211,52,33)" fg:x="15165" fg:w="5"/><text x="99.7383%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.02%)</title><rect x="99.5014%" y="453" width="0.0197%" height="15" fill="rgb(234,58,33)" fg:x="15167" fg:w="3"/><text x="99.7514%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.5080%" y="437" width="0.0131%" height="15" fill="rgb(220,115,36)" fg:x="15168" fg:w="2"/><text x="99.7580%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="99.5342%" y="517" width="0.0131%" height="15" fill="rgb(243,153,54)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="99.5342%" y="501" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="99.5342%" y="485" width="0.0131%" height="15" fill="rgb(242,102,42)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="99.5342%" y="469" width="0.0131%" height="15" fill="rgb(234,31,38)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="99.5342%" y="453" width="0.0131%" height="15" fill="rgb(221,117,51)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="99.5342%" y="437" width="0.0131%" height="15" fill="rgb(212,20,18)" fg:x="15172" fg:w="2"/><text x="99.7842%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="99.5539%" y="517" width="0.0197%" height="15" fill="rgb(245,133,36)" fg:x="15175" fg:w="3"/><text x="99.8039%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="99.5539%" y="501" width="0.0197%" height="15" fill="rgb(212,6,19)" fg:x="15175" fg:w="3"/><text x="99.8039%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="99.5539%" y="485" width="0.0197%" height="15" fill="rgb(218,1,36)" fg:x="15175" fg:w="3"/><text x="99.8039%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (21 samples, 0.14%)</title><rect x="99.4489%" y="613" width="0.1378%" height="15" fill="rgb(246,84,54)" fg:x="15159" fg:w="21"/><text x="99.6989%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (21 samples, 0.14%)</title><rect x="99.4489%" y="597" width="0.1378%" height="15" fill="rgb(242,110,6)" fg:x="15159" fg:w="21"/><text x="99.6989%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.14%)</title><rect x="99.4489%" y="581" width="0.1378%" height="15" fill="rgb(214,47,5)" fg:x="15159" fg:w="21"/><text x="99.6989%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.07%)</title><rect x="99.5211%" y="565" width="0.0656%" height="15" fill="rgb(218,159,25)" fg:x="15170" fg:w="10"/><text x="99.7711%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.07%)</title><rect x="99.5211%" y="549" width="0.0656%" height="15" fill="rgb(215,211,28)" fg:x="15170" fg:w="10"/><text x="99.7711%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.07%)</title><rect x="99.5211%" y="533" width="0.0656%" height="15" fill="rgb(238,59,32)" fg:x="15170" fg:w="10"/><text x="99.7711%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="99.6261%" y="501" width="0.0131%" height="15" fill="rgb(226,82,3)" fg:x="15186" fg:w="2"/><text x="99.8761%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="99.6392%" y="485" width="0.0197%" height="15" fill="rgb(240,164,32)" fg:x="15188" fg:w="3"/><text x="99.8892%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.6129%" y="549" width="0.0590%" height="15" fill="rgb(232,46,7)" fg:x="15184" fg:w="9"/><text x="99.8629%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.6129%" y="533" width="0.0590%" height="15" fill="rgb(229,129,53)" fg:x="15184" fg:w="9"/><text x="99.8629%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.6129%" y="517" width="0.0590%" height="15" fill="rgb(234,188,29)" fg:x="15184" fg:w="9"/><text x="99.8629%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="99.6392%" y="501" width="0.0328%" height="15" fill="rgb(246,141,4)" fg:x="15188" fg:w="5"/><text x="99.8892%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="99.6589%" y="485" width="0.0131%" height="15" fill="rgb(229,23,39)" fg:x="15191" fg:w="2"/><text x="99.9089%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.08%)</title><rect x="99.6064%" y="581" width="0.0787%" height="15" fill="rgb(206,12,3)" fg:x="15183" fg:w="12"/><text x="99.8564%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.08%)</title><rect x="99.6064%" y="565" width="0.0787%" height="15" fill="rgb(252,226,20)" fg:x="15183" fg:w="12"/><text x="99.8564%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="99.6720%" y="549" width="0.0131%" height="15" fill="rgb(216,123,35)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="99.6720%" y="533" width="0.0131%" height="15" fill="rgb(212,68,40)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="99.6720%" y="517" width="0.0131%" height="15" fill="rgb(254,125,32)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.6720%" y="501" width="0.0131%" height="15" fill="rgb(253,97,22)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.6720%" y="485" width="0.0131%" height="15" fill="rgb(241,101,14)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.6720%" y="469" width="0.0131%" height="15" fill="rgb(238,103,29)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="99.6720%" y="453" width="0.0131%" height="15" fill="rgb(233,195,47)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.6720%" y="437" width="0.0131%" height="15" fill="rgb(246,218,30)" fg:x="15193" fg:w="2"/><text x="99.9220%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="99.7048%" y="533" width="0.0131%" height="15" fill="rgb(219,145,47)" fg:x="15198" fg:w="2"/><text x="99.9548%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.04%)</title><rect x="99.6851%" y="581" width="0.0394%" height="15" fill="rgb(243,12,26)" fg:x="15195" fg:w="6"/><text x="99.9351%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.04%)</title><rect x="99.6851%" y="565" width="0.0394%" height="15" fill="rgb(214,87,16)" fg:x="15195" fg:w="6"/><text x="99.9351%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.04%)</title><rect x="99.6851%" y="549" width="0.0394%" height="15" fill="rgb(208,99,42)" fg:x="15195" fg:w="6"/><text x="99.9351%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="99.7704%" y="373" width="0.0262%" height="15" fill="rgb(253,99,2)" fg:x="15208" fg:w="4"/><text x="100.0204%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.7507%" y="437" width="0.0590%" height="15" fill="rgb(220,168,23)" fg:x="15205" fg:w="9"/><text x="100.0007%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.7507%" y="421" width="0.0590%" height="15" fill="rgb(242,38,24)" fg:x="15205" fg:w="9"/><text x="100.0007%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.06%)</title><rect x="99.7507%" y="405" width="0.0590%" height="15" fill="rgb(225,182,9)" fg:x="15205" fg:w="9"/><text x="100.0007%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.04%)</title><rect x="99.7704%" y="389" width="0.0394%" height="15" fill="rgb(243,178,37)" fg:x="15208" fg:w="6"/><text x="100.0204%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="99.7966%" y="373" width="0.0131%" height="15" fill="rgb(232,139,19)" fg:x="15212" fg:w="2"/><text x="100.0466%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (11 samples, 0.07%)</title><rect x="99.7507%" y="501" width="0.0722%" height="15" fill="rgb(225,201,24)" fg:x="15205" fg:w="11"/><text x="100.0007%" y="511.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (11 samples, 0.07%)</title><rect x="99.7507%" y="485" width="0.0722%" height="15" fill="rgb(221,47,46)" fg:x="15205" fg:w="11"/><text x="100.0007%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.07%)</title><rect x="99.7507%" y="469" width="0.0722%" height="15" fill="rgb(249,23,13)" fg:x="15205" fg:w="11"/><text x="100.0007%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.07%)</title><rect x="99.7507%" y="453" width="0.0722%" height="15" fill="rgb(219,9,5)" fg:x="15205" fg:w="11"/><text x="100.0007%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="99.8097%" y="437" width="0.0131%" height="15" fill="rgb(254,171,16)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="99.8097%" y="421" width="0.0131%" height="15" fill="rgb(230,171,20)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="99.8097%" y="405" width="0.0131%" height="15" fill="rgb(210,71,41)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.8097%" y="389" width="0.0131%" height="15" fill="rgb(206,173,20)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.8097%" y="373" width="0.0131%" height="15" fill="rgb(233,88,34)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.01%)</title><rect x="99.8097%" y="357" width="0.0131%" height="15" fill="rgb(223,209,46)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.8097%" y="341" width="0.0131%" height="15" fill="rgb(250,43,18)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="99.8097%" y="325" width="0.0131%" height="15" fill="rgb(208,13,10)" fg:x="15214" fg:w="2"/><text x="100.0597%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="99.8426%" y="469" width="0.0131%" height="15" fill="rgb(212,200,36)" fg:x="15219" fg:w="2"/><text x="100.0926%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.04%)</title><rect x="99.8294%" y="501" width="0.0394%" height="15" fill="rgb(225,90,30)" fg:x="15217" fg:w="6"/><text x="100.0794%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.04%)</title><rect x="99.8294%" y="485" width="0.0394%" height="15" fill="rgb(236,182,39)" fg:x="15217" fg:w="6"/><text x="100.0794%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="99.8557%" y="469" width="0.0131%" height="15" fill="rgb(212,144,35)" fg:x="15221" fg:w="2"/><text x="100.1057%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="99.8557%" y="453" width="0.0131%" height="15" fill="rgb(228,63,44)" fg:x="15221" fg:w="2"/><text x="100.1057%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.02%)</title><rect x="99.8688%" y="469" width="0.0197%" height="15" fill="rgb(228,109,6)" fg:x="15223" fg:w="3"/><text x="100.1188%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.02%)</title><rect x="99.8688%" y="453" width="0.0197%" height="15" fill="rgb(238,117,24)" fg:x="15223" fg:w="3"/><text x="100.1188%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="99.8688%" y="437" width="0.0197%" height="15" fill="rgb(242,26,26)" fg:x="15223" fg:w="3"/><text x="100.1188%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="99.8688%" y="421" width="0.0197%" height="15" fill="rgb(221,92,48)" fg:x="15223" fg:w="3"/><text x="100.1188%" y="431.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="99.8688%" y="405" width="0.0197%" height="15" fill="rgb(209,209,32)" fg:x="15223" fg:w="3"/><text x="100.1188%" y="415.50"></text></g><g><title>malloc (2 samples, 0.01%)</title><rect x="99.8754%" y="389" width="0.0131%" height="15" fill="rgb(221,70,22)" fg:x="15224" fg:w="2"/><text x="100.1254%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (24 samples, 0.16%)</title><rect x="99.7376%" y="565" width="0.1574%" height="15" fill="rgb(248,145,5)" fg:x="15203" fg:w="24"/><text x="99.9876%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.16%)</title><rect x="99.7376%" y="549" width="0.1574%" height="15" fill="rgb(226,116,26)" fg:x="15203" fg:w="24"/><text x="99.9876%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (24 samples, 0.16%)</title><rect x="99.7376%" y="533" width="0.1574%" height="15" fill="rgb(244,5,17)" fg:x="15203" fg:w="24"/><text x="99.9876%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (24 samples, 0.16%)</title><rect x="99.7376%" y="517" width="0.1574%" height="15" fill="rgb(252,159,33)" fg:x="15203" fg:w="24"/><text x="99.9876%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (4 samples, 0.03%)</title><rect x="99.8688%" y="501" width="0.0262%" height="15" fill="rgb(206,71,0)" fg:x="15223" fg:w="4"/><text x="100.1188%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (4 samples, 0.03%)</title><rect x="99.8688%" y="485" width="0.0262%" height="15" fill="rgb(233,118,54)" fg:x="15223" fg:w="4"/><text x="100.1188%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="99.8950%" y="565" width="0.0131%" height="15" fill="rgb(234,83,48)" fg:x="15227" fg:w="2"/><text x="100.1450%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (52 samples, 0.34%)</title><rect x="99.5867%" y="613" width="0.3411%" height="15" fill="rgb(228,3,54)" fg:x="15180" fg:w="52"/><text x="99.8367%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.34%)</title><rect x="99.5867%" y="597" width="0.3411%" height="15" fill="rgb(226,155,13)" fg:x="15180" fg:w="52"/><text x="99.8367%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (31 samples, 0.20%)</title><rect x="99.7245%" y="581" width="0.2034%" height="15" fill="rgb(241,28,37)" fg:x="15201" fg:w="31"/><text x="99.9745%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (3 samples, 0.02%)</title><rect x="99.9082%" y="565" width="0.0197%" height="15" fill="rgb(233,93,10)" fg:x="15229" fg:w="3"/><text x="100.1582%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.01%)</title><rect x="99.9147%" y="549" width="0.0131%" height="15" fill="rgb(225,113,19)" fg:x="15230" fg:w="2"/><text x="100.1647%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.01%)</title><rect x="99.9147%" y="533" width="0.0131%" height="15" fill="rgb(241,2,18)" fg:x="15230" fg:w="2"/><text x="100.1647%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="99.9278%" y="565" width="0.0197%" height="15" fill="rgb(228,207,21)" fg:x="15232" fg:w="3"/><text x="100.1778%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="99.9278%" y="549" width="0.0197%" height="15" fill="rgb(213,211,35)" fg:x="15232" fg:w="3"/><text x="100.1778%" y="559.50"></text></g><g><title>_start (15,236 samples, 99.95%)</title><rect x="0.0000%" y="917" width="99.9541%" height="15" fill="rgb(209,83,10)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (15,236 samples, 99.95%)</title><rect x="0.0000%" y="901" width="99.9541%" height="15" fill="rgb(209,164,1)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>[libc.so.6] (15,236 samples, 99.95%)</title><rect x="0.0000%" y="885" width="99.9541%" height="15" fill="rgb(213,184,43)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="895.50">[libc.so.6]</text></g><g><title>main (15,236 samples, 99.95%)</title><rect x="0.0000%" y="869" width="99.9541%" height="15" fill="rgb(231,61,34)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (15,236 samples, 99.95%)</title><rect x="0.0000%" y="853" width="99.9541%" height="15" fill="rgb(235,75,3)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (15,236 samples, 99.95%)</title><rect x="0.0000%" y="837" width="99.9541%" height="15" fill="rgb(220,106,47)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (15,236 samples, 99.95%)</title><rect x="0.0000%" y="821" width="99.9541%" height="15" fill="rgb(210,196,33)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,236 samples, 99.95%)</title><rect x="0.0000%" y="805" width="99.9541%" height="15" fill="rgb(229,154,42)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (15,236 samples, 99.95%)</title><rect x="0.0000%" y="789" width="99.9541%" height="15" fill="rgb(228,114,26)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (15,236 samples, 99.95%)</title><rect x="0.0000%" y="773" width="99.9541%" height="15" fill="rgb(208,144,1)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (15,236 samples, 99.95%)</title><rect x="0.0000%" y="757" width="99.9541%" height="15" fill="rgb(239,112,37)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,236 samples, 99.95%)</title><rect x="0.0000%" y="741" width="99.9541%" height="15" fill="rgb(210,96,50)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (15,236 samples, 99.95%)</title><rect x="0.0000%" y="725" width="99.9541%" height="15" fill="rgb(222,178,2)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (15,236 samples, 99.95%)</title><rect x="0.0000%" y="709" width="99.9541%" height="15" fill="rgb(226,74,18)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15,236 samples, 99.95%)</title><rect x="0.0000%" y="693" width="99.9541%" height="15" fill="rgb(225,67,54)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (15,236 samples, 99.95%)</title><rect x="0.0000%" y="677" width="99.9541%" height="15" fill="rgb(251,92,32)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="687.50">core::ops::function::FnOnce::call_once</text></g><g><title>parse::main (15,236 samples, 99.95%)</title><rect x="0.0000%" y="661" width="99.9541%" height="15" fill="rgb(228,149,22)" fg:x="0" fg:w="15236"/><text x="0.2500%" y="671.50">parse::main</text></g><g><title>hl7_parser::message::Message::parse (13,537 samples, 88.81%)</title><rect x="11.1461%" y="645" width="88.8080%" height="15" fill="rgb(243,54,13)" fg:x="1699" fg:w="13537"/><text x="11.3961%" y="655.50">hl7_parser::message::Message::parse</text></g><g><title>hl7_parser::parser::parse_message (13,534 samples, 88.79%)</title><rect x="11.1658%" y="629" width="88.7883%" height="15" fill="rgb(243,180,28)" fg:x="1702" fg:w="13534"/><text x="11.4158%" y="639.50">hl7_parser::parser::parse_message</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.03%)</title><rect x="99.9278%" y="613" width="0.0262%" height="15" fill="rgb(208,167,24)" fg:x="15232" fg:w="4"/><text x="100.1778%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.03%)</title><rect x="99.9278%" y="597" width="0.0262%" height="15" fill="rgb(245,73,45)" fg:x="15232" fg:w="4"/><text x="100.1778%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (4 samples, 0.03%)</title><rect x="99.9278%" y="581" width="0.0262%" height="15" fill="rgb(237,203,48)" fg:x="15232" fg:w="4"/><text x="100.1778%" y="591.50"></text></g><g><title>parse (15,237 samples, 99.96%)</title><rect x="0.0000%" y="933" width="99.9606%" height="15" fill="rgb(211,197,16)" fg:x="0" fg:w="15237"/><text x="0.2500%" y="943.50">parse</text></g><g><title>all (15,243 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(243,99,51)" fg:x="0" fg:w="15243"/><text x="0.2500%" y="959.50"></text></g><g><title>perf-exec (6 samples, 0.04%)</title><rect x="99.9606%" y="933" width="0.0394%" height="15" fill="rgb(215,123,29)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="99.9606%" y="917" width="0.0394%" height="15" fill="rgb(239,186,37)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="99.9606%" y="901" width="0.0394%" height="15" fill="rgb(252,136,39)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.04%)</title><rect x="99.9606%" y="885" width="0.0394%" height="15" fill="rgb(223,213,32)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="895.50"></text></g><g><title>do_execveat_common.isra.0 (6 samples, 0.04%)</title><rect x="99.9606%" y="869" width="0.0394%" height="15" fill="rgb(233,115,5)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="879.50"></text></g><g><title>bprm_execve (6 samples, 0.04%)</title><rect x="99.9606%" y="853" width="0.0394%" height="15" fill="rgb(207,226,44)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="863.50"></text></g><g><title>load_elf_binary (6 samples, 0.04%)</title><rect x="99.9606%" y="837" width="0.0394%" height="15" fill="rgb(208,126,0)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="847.50"></text></g><g><title>begin_new_exec (6 samples, 0.04%)</title><rect x="99.9606%" y="821" width="0.0394%" height="15" fill="rgb(244,66,21)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="831.50"></text></g><g><title>perf_event_comm (6 samples, 0.04%)</title><rect x="99.9606%" y="805" width="0.0394%" height="15" fill="rgb(222,97,12)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="815.50"></text></g><g><title>strnlen (6 samples, 0.04%)</title><rect x="99.9606%" y="789" width="0.0394%" height="15" fill="rgb(219,213,19)" fg:x="15237" fg:w="6"/><text x="100.2106%" y="799.50"></text></g></svg></svg>